{
    "sourceFile": "src/components/forms/GuestCheckInForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1752150658542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752150670884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React from \"react\";\r\n-import { useVisitorForm } from \"../../hooks/useVisitorForm\";\r\n \r\n+\r\n export default function GuestCheckInForm() {\r\n   const {\r\n     formData,\r\n     loading,\r\n"
                },
                {
                    "date": 1752150677098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,202 @@\n+import React from \"react\";\r\n+useV\r\n+\r\n+export default function GuestCheckInForm() {\r\n+  const {\r\n+    formData,\r\n+    loading,\r\n+    error,\r\n+    isVisitorMode,\r\n+    isSecurityMode,\r\n+    isResidentMode,\r\n+    handleInputChange,\r\n+    handleSubmit\r\n+  } = useVisitorForm();\r\n+\r\n+  const getFormTitle = () => {\r\n+    if (isVisitorMode) return \"Complete Your Invitation\";\r\n+    if (isSecurityMode) return \"Security Check-in\";\r\n+    return \"Invite a Visitor\";\r\n+  };\r\n+\r\n+  const getFormDescription = () => {\r\n+    if (isVisitorMode) {\r\n+      return \"Hi there! Please complete the form for a smooth check-in process.\";\r\n+    }\r\n+    if (isSecurityMode) {\r\n+      return \"Fill in the visitor details for gate entry.\";\r\n+    }\r\n+    return \"Fill in guest details to send an invitation.\";\r\n+  };\r\n+\r\n+  // Field configuration based on mode\r\n+  const getFieldConfig = () => {\r\n+    const baseFields = [\r\n+      { \r\n+        key: 'guestName', \r\n+        label: 'Guest Name *', \r\n+        placeholder: 'Enter guest name',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'phoneNumber', \r\n+        label: 'Phone Number *', \r\n+        placeholder: '+254-723-456-789',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'email', \r\n+        label: 'Email *', \r\n+        placeholder: 'e.g guest@email.com',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'date', \r\n+        label: 'Visit Date *', \r\n+        placeholder: 'dd/mm/yyyy',\r\n+        type: 'date',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'carPlate', \r\n+        label: 'Car Number Plate (Optional)', \r\n+        placeholder: 'e.g KCW 123K',\r\n+        required: false\r\n+      }\r\n+    ];\r\n+\r\n+    // Add mode-specific fields\r\n+    if (isVisitorMode) {\r\n+      // Visitor mode - hide house number, show host name as readonly\r\n+      baseFields.push({\r\n+        key: 'hostName',\r\n+        label: 'Host Name/Unit',\r\n+        placeholder: 'Host information',\r\n+        readOnly: true,\r\n+        required: false\r\n+      });\r\n+    } else {\r\n+      // Resident/Security mode - show house number field\r\n+      baseFields.push({\r\n+        key: 'houseNumber',\r\n+        label: 'House Number *',\r\n+        placeholder: 'e.g 302b',\r\n+        required: true\r\n+      });\r\n+      \r\n+      if (isResidentMode) {\r\n+        baseFields.push({\r\n+          key: 'hostName',\r\n+          label: 'Host Name',\r\n+          placeholder: 'Your name',\r\n+          required: true\r\n+        });\r\n+      }\r\n+    }\r\n+\r\n+    return baseFields;\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex justify-center items-center h-64\">\r\n+        <div className=\"text-[#00580d]\">Loading...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-16 w-[280px]\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between w-full\">\r\n+        <div className=\"flex items-center gap-1 bg-[#d1c9fa] border border-[#2d2264] rounded px-1 py-1 h-[29px]\">\r\n+          <div className=\"flex items-center gap-1\">\r\n+            <img src=\"mask-group0.svg\" alt=\"Flag\" className=\"w-4 h-4\" />\r\n+            <div className=\"text-[#2d2264] text-sm font-medium\">EN</div>\r\n+          </div>\r\n+          <img src=\"dropdown0.svg\" alt=\"Dropdown\" className=\"w-5 h-5\" />\r\n+        </div>\r\n+        <img\r\n+          src=\"material-symbols-light-close-rounded0.svg\"\r\n+          alt=\"Close\"\r\n+          className=\"w-[29px] h-[29px] rounded cursor-pointer\"\r\n+        />\r\n+      </div>\r\n+\r\n+      {/* Form Content */}\r\n+      <div className=\"flex flex-col items-center gap-4 w-full\">\r\n+        <div className=\"text-[#00580d] text-sm font-medium text-left\">\r\n+          <h2 className=\"font-bold mb-2\">{getFormTitle()}</h2>\r\n+          <p>{getFormDescription()}</p>\r\n+        </div>\r\n+\r\n+        {error && (\r\n+          <div className=\"text-red-500 text-sm text-center w-full\">\r\n+            {error}\r\n+          </div>\r\n+        )}\r\n+\r\n+        <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 w-full\">\r\n+          {getFieldConfig().map(({ key, label, placeholder, type = 'text', required, readOnly }) => (\r\n+            <div key={key} className=\"flex flex-col gap-1 w-full\">\r\n+              <label className=\"text-[#00d21e] text-xs font-medium\">{label}</label>\r\n+              <div className=\"bg-white border border-[#54e168] rounded-xl px-3 py-2 text-sm text-[#00580d]\">\r\n+                <input\r\n+                  type={type}\r\n+                  placeholder={placeholder}\r\n+                  value={formData[key]}\r\n+                  onChange={(e) => handleInputChange(key, e.target.value)}\r\n+                  required={required}\r\n+                  readOnly={readOnly}\r\n+                  className={`w-full outline-none bg-transparent placeholder:text-xs placeholder:font-medium ${\r\n+                    readOnly ? 'opacity-60' : ''\r\n+                  }`}\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          ))}\r\n+\r\n+          {/* Photo Upload - Required for visitor mode */}\r\n+          {(isVisitorMode || isSecurityMode) && (\r\n+            <div className=\"flex flex-col gap-1 w-full\">\r\n+              <label className=\"text-[#00d21e] text-xs font-medium\">\r\n+                Photo {isVisitorMode ? '*' : '(Optional)'}\r\n+              </label>\r\n+              <div className=\"flex items-center justify-between border border-[#00d21e] rounded-xl overflow-hidden\">\r\n+                <span className=\"text-[#9abd9f] text-xs px-3\">PNG/JPG</span>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => document.getElementById('photo-upload').click()}\r\n+                  className=\"bg-[#00d21e] text-white text-xs font-semibold px-4 py-2 rounded-r-xl\"\r\n+                >\r\n+                  Upload\r\n+                </button>\r\n+                <input\r\n+                  id=\"photo-upload\"\r\n+                  type=\"file\"\r\n+                  accept=\"image/*\"\r\n+                  onChange={(e) => handleInputChange('photo', e.target.files[0])}\r\n+                  className=\"hidden\"\r\n+                  required={isVisitorMode}\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Submit Button */}\r\n+          <div className=\"bg-[#00d21e] text-white rounded-[24px] px-6 py-2 shadow-md text-center mt-4\">\r\n+            <button \r\n+              type=\"submit\" \r\n+              disabled={loading}\r\n+              className=\"text-white text-base font-medium w-full\"\r\n+            >\r\n+              {loading ? 'Submitting...' : \r\n+               isVisitorMode ? 'Complete Registration' :\r\n+               isResidentMode ? 'Send Invitation' : 'Register Visitor'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1752150686248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,202 @@\n+import React from \"react\";\r\n+import { useVisitorForm } from \"../../hooks/useVisitorForm\";\r\n+\r\n+export default function GuestCheckInForm() {\r\n+  const {\r\n+    formData,\r\n+    loading,\r\n+    error,\r\n+    isVisitorMode,\r\n+    isSecurityMode,\r\n+    isResidentMode,\r\n+    handleInputChange,\r\n+    handleSubmit\r\n+  } = useVisitorForm();\r\n+\r\n+  const getFormTitle = () => {\r\n+    if (isVisitorMode) return \"Complete Your Invitation\";\r\n+    if (isSecurityMode) return \"Security Check-in\";\r\n+    return \"Invite a Visitor\";\r\n+  };\r\n+\r\n+  const getFormDescription = () => {\r\n+    if (isVisitorMode) {\r\n+      return \"Hi there! Please complete the form for a smooth check-in process.\";\r\n+    }\r\n+    if (isSecurityMode) {\r\n+      return \"Fill in the visitor details for gate entry.\";\r\n+    }\r\n+    return \"Fill in guest details to send an invitation.\";\r\n+  };\r\n+\r\n+  // Field configuration based on mode\r\n+  const getFieldConfig = () => {\r\n+    const baseFields = [\r\n+      { \r\n+        key: 'guestName', \r\n+        label: 'Guest Name *', \r\n+        placeholder: 'Enter guest name',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'phoneNumber', \r\n+        label: 'Phone Number *', \r\n+        placeholder: '+254-723-456-789',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'email', \r\n+        label: 'Email *', \r\n+        placeholder: 'e.g guest@email.com',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'date', \r\n+        label: 'Visit Date *', \r\n+        placeholder: 'dd/mm/yyyy',\r\n+        type: 'date',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'carPlate', \r\n+        label: 'Car Number Plate (Optional)', \r\n+        placeholder: 'e.g KCW 123K',\r\n+        required: false\r\n+      }\r\n+    ];\r\n+\r\n+    // Add mode-specific fields\r\n+    if (isVisitorMode) {\r\n+      // Visitor mode - hide house number, show host name as readonly\r\n+      baseFields.push({\r\n+        key: 'hostName',\r\n+        label: 'Host Name/Unit',\r\n+        placeholder: 'Host information',\r\n+        readOnly: true,\r\n+        required: false\r\n+      });\r\n+    } else {\r\n+      // Resident/Security mode - show house number field\r\n+      baseFields.push({\r\n+        key: 'houseNumber',\r\n+        label: 'House Number *',\r\n+        placeholder: 'e.g 302b',\r\n+        required: true\r\n+      });\r\n+      \r\n+      if (isResidentMode) {\r\n+        baseFields.push({\r\n+          key: 'hostName',\r\n+          label: 'Host Name',\r\n+          placeholder: 'Your name',\r\n+          required: true\r\n+        });\r\n+      }\r\n+    }\r\n+\r\n+    return baseFields;\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex justify-center items-center h-64\">\r\n+        <div className=\"text-[#00580d]\">Loading...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-16 w-[280px]\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between w-full\">\r\n+        <div className=\"flex items-center gap-1 bg-[#d1c9fa] border border-[#2d2264] rounded px-1 py-1 h-[29px]\">\r\n+          <div className=\"flex items-center gap-1\">\r\n+            <img src=\"mask-group0.svg\" alt=\"Flag\" className=\"w-4 h-4\" />\r\n+            <div className=\"text-[#2d2264] text-sm font-medium\">EN</div>\r\n+          </div>\r\n+          <img src=\"dropdown0.svg\" alt=\"Dropdown\" className=\"w-5 h-5\" />\r\n+        </div>\r\n+        <img\r\n+          src=\"material-symbols-light-close-rounded0.svg\"\r\n+          alt=\"Close\"\r\n+          className=\"w-[29px] h-[29px] rounded cursor-pointer\"\r\n+        />\r\n+      </div>\r\n+\r\n+      {/* Form Content */}\r\n+      <div className=\"flex flex-col items-center gap-4 w-full\">\r\n+        <div className=\"text-[#00580d] text-sm font-medium text-left\">\r\n+          <h2 className=\"font-bold mb-2\">{getFormTitle()}</h2>\r\n+          <p>{getFormDescription()}</p>\r\n+        </div>\r\n+\r\n+        {error && (\r\n+          <div className=\"text-red-500 text-sm text-center w-full\">\r\n+            {error}\r\n+          </div>\r\n+        )}\r\n+\r\n+        <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 w-full\">\r\n+          {getFieldConfig().map(({ key, label, placeholder, type = 'text', required, readOnly }) => (\r\n+            <div key={key} className=\"flex flex-col gap-1 w-full\">\r\n+              <label className=\"text-[#00d21e] text-xs font-medium\">{label}</label>\r\n+              <div className=\"bg-white border border-[#54e168] rounded-xl px-3 py-2 text-sm text-[#00580d]\">\r\n+                <input\r\n+                  type={type}\r\n+                  placeholder={placeholder}\r\n+                  value={formData[key]}\r\n+                  onChange={(e) => handleInputChange(key, e.target.value)}\r\n+                  required={required}\r\n+                  readOnly={readOnly}\r\n+                  className={`w-full outline-none bg-transparent placeholder:text-xs placeholder:font-medium ${\r\n+                    readOnly ? 'opacity-60' : ''\r\n+                  }`}\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          ))}\r\n+\r\n+          {/* Photo Upload - Required for visitor mode */}\r\n+          {(isVisitorMode || isSecurityMode) && (\r\n+            <div className=\"flex flex-col gap-1 w-full\">\r\n+              <label className=\"text-[#00d21e] text-xs font-medium\">\r\n+                Photo {isVisitorMode ? '*' : '(Optional)'}\r\n+              </label>\r\n+              <div className=\"flex items-center justify-between border border-[#00d21e] rounded-xl overflow-hidden\">\r\n+                <span className=\"text-[#9abd9f] text-xs px-3\">PNG/JPG</span>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => document.getElementById('photo-upload').click()}\r\n+                  className=\"bg-[#00d21e] text-white text-xs font-semibold px-4 py-2 rounded-r-xl\"\r\n+                >\r\n+                  Upload\r\n+                </button>\r\n+                <input\r\n+                  id=\"photo-upload\"\r\n+                  type=\"file\"\r\n+                  accept=\"image/*\"\r\n+                  onChange={(e) => handleInputChange('photo', e.target.files[0])}\r\n+                  className=\"hidden\"\r\n+                  required={isVisitorMode}\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Submit Button */}\r\n+          <div className=\"bg-[#00d21e] text-white rounded-[24px] px-6 py-2 shadow-md text-center mt-4\">\r\n+            <button \r\n+              type=\"submit\" \r\n+              disabled={loading}\r\n+              className=\"text-white text-base font-medium w-full\"\r\n+            >\r\n+              {loading ? 'Submitting...' : \r\n+               isVisitorMode ? 'Complete Registration' :\r\n+               isResidentMode ? 'Send Invitation' : 'Register Visitor'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1752151999276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n   // Field configuration based on mode\r\n   const getFieldConfig = () => {\r\n     const baseFields = [\r\n       { \r\n-        key: 'fu', \r\n+        key: 'ful', \r\n         label: 'Guest Name *', \r\n         placeholder: 'Enter guest name',\r\n         required: true\r\n       },\r\n"
                },
                {
                    "date": 1752152013404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,202 @@\n+import React from \"react\";\r\n+import { useVisitorForm } from \"../../hooks/useVisitorForm\";\r\n+\r\n+export default function GuestCheckInForm() {\r\n+  const {\r\n+    formData,\r\n+    loading,\r\n+    error,\r\n+    isVisitorMode,\r\n+    isSecurityMode,\r\n+    isResidentMode,\r\n+    handleInputChange,\r\n+    handleSubmit\r\n+  } = useVisitorForm();\r\n+\r\n+  const getFormTitle = () => {\r\n+    if (isVisitorMode) return \"Complete Your Invitation\";\r\n+    if (isSecurityMode) return \"Security Check-in\";\r\n+    return \"Invite a Visitor\";\r\n+  };\r\n+\r\n+  const getFormDescription = () => {\r\n+    if (isVisitorMode) {\r\n+      return \"Hi there! Please complete the form for a smooth check-in process.\";\r\n+    }\r\n+    if (isSecurityMode) {\r\n+      return \"Fill in the visitor details for gate entry.\";\r\n+    }\r\n+    return \"Fill in guest details to send an invitation.\";\r\n+  };\r\n+\r\n+  // Field configuration based on mode\r\n+  const getFieldConfig = () => {\r\n+    const baseFields = [\r\n+      { \r\n+        key: 'full_name', \r\n+        label: 'Guest Name *', \r\n+        placeholder: 'Enter guest name',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'phone_number', \r\n+        label: 'Phone Number *', \r\n+        placeholder: '+254-723-456-789',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'email', \r\n+        label: 'Email *', \r\n+        placeholder: 'e.g guest@email.com',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'date', \r\n+        label: 'Visit Date *', \r\n+        placeholder: 'dd/mm/yyyy',\r\n+        type: 'date',\r\n+        required: true\r\n+      },\r\n+      { \r\n+        key: 'carPlate', \r\n+        label: 'Car Number Plate (Optional)', \r\n+        placeholder: 'e.g KCW 123K',\r\n+        required: false\r\n+      }\r\n+    ];\r\n+\r\n+    // Add mode-specific fields\r\n+    if (isVisitorMode) {\r\n+      // Visitor mode - hide house number, show host name as readonly\r\n+      baseFields.push({\r\n+        key: 'hostName',\r\n+        label: 'Host Name/Unit',\r\n+        placeholder: 'Host information',\r\n+        readOnly: true,\r\n+        required: false\r\n+      });\r\n+    } else {\r\n+      // Resident/Security mode - show house number field\r\n+      baseFields.push({\r\n+        key: 'houseNumber',\r\n+        label: 'House Number *',\r\n+        placeholder: 'e.g 302b',\r\n+        required: true\r\n+      });\r\n+      \r\n+      if (isResidentMode) {\r\n+        baseFields.push({\r\n+          key: 'hostName',\r\n+          label: 'Host Name',\r\n+          placeholder: 'Your name',\r\n+          required: true\r\n+        });\r\n+      }\r\n+    }\r\n+\r\n+    return baseFields;\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex justify-center items-center h-64\">\r\n+        <div className=\"text-[#00580d]\">Loading...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-16 w-[280px]\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between w-full\">\r\n+        <div className=\"flex items-center gap-1 bg-[#d1c9fa] border border-[#2d2264] rounded px-1 py-1 h-[29px]\">\r\n+          <div className=\"flex items-center gap-1\">\r\n+            <img src=\"mask-group0.svg\" alt=\"Flag\" className=\"w-4 h-4\" />\r\n+            <div className=\"text-[#2d2264] text-sm font-medium\">EN</div>\r\n+          </div>\r\n+          <img src=\"dropdown0.svg\" alt=\"Dropdown\" className=\"w-5 h-5\" />\r\n+        </div>\r\n+        <img\r\n+          src=\"material-symbols-light-close-rounded0.svg\"\r\n+          alt=\"Close\"\r\n+          className=\"w-[29px] h-[29px] rounded cursor-pointer\"\r\n+        />\r\n+      </div>\r\n+\r\n+      {/* Form Content */}\r\n+      <div className=\"flex flex-col items-center gap-4 w-full\">\r\n+        <div className=\"text-[#00580d] text-sm font-medium text-left\">\r\n+          <h2 className=\"font-bold mb-2\">{getFormTitle()}</h2>\r\n+          <p>{getFormDescription()}</p>\r\n+        </div>\r\n+\r\n+        {error && (\r\n+          <div className=\"text-red-500 text-sm text-center w-full\">\r\n+            {error}\r\n+          </div>\r\n+        )}\r\n+\r\n+        <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 w-full\">\r\n+          {getFieldConfig().map(({ key, label, placeholder, type = 'text', required, readOnly }) => (\r\n+            <div key={key} className=\"flex flex-col gap-1 w-full\">\r\n+              <label className=\"text-[#00d21e] text-xs font-medium\">{label}</label>\r\n+              <div className=\"bg-white border border-[#54e168] rounded-xl px-3 py-2 text-sm text-[#00580d]\">\r\n+                <input\r\n+                  type={type}\r\n+                  placeholder={placeholder}\r\n+                  value={formData[key]}\r\n+                  onChange={(e) => handleInputChange(key, e.target.value)}\r\n+                  required={required}\r\n+                  readOnly={readOnly}\r\n+                  className={`w-full outline-none bg-transparent placeholder:text-xs placeholder:font-medium ${\r\n+                    readOnly ? 'opacity-60' : ''\r\n+                  }`}\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          ))}\r\n+\r\n+          {/* Photo Upload - Required for visitor mode */}\r\n+          {(isVisitorMode || isSecurityMode) && (\r\n+            <div className=\"flex flex-col gap-1 w-full\">\r\n+              <label className=\"text-[#00d21e] text-xs font-medium\">\r\n+                Photo {isVisitorMode ? '*' : '(Optional)'}\r\n+              </label>\r\n+              <div className=\"flex items-center justify-between border border-[#00d21e] rounded-xl overflow-hidden\">\r\n+                <span className=\"text-[#9abd9f] text-xs px-3\">PNG/JPG</span>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => document.getElementById('photo-upload').click()}\r\n+                  className=\"bg-[#00d21e] text-white text-xs font-semibold px-4 py-2 rounded-r-xl\"\r\n+                >\r\n+                  Upload\r\n+                </button>\r\n+                <input\r\n+                  id=\"photo-upload\"\r\n+                  type=\"file\"\r\n+                  accept=\"image/*\"\r\n+                  onChange={(e) => handleInputChange('photo', e.target.files[0])}\r\n+                  className=\"hidden\"\r\n+                  required={isVisitorMode}\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Submit Button */}\r\n+          <div className=\"bg-[#00d21e] text-white rounded-[24px] px-6 py-2 shadow-md text-center mt-4\">\r\n+            <button \r\n+              type=\"submit\" \r\n+              disabled={loading}\r\n+              className=\"text-white text-base font-medium w-full\"\r\n+            >\r\n+              {loading ? 'Submitting...' : \r\n+               isVisitorMode ? 'Complete Registration' :\r\n+               isResidentMode ? 'Send Invitation' : 'Register Visitor'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1752150658542,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport { useVisitorForm } from \"../../hooks/useVisitorForm\";\r\n\r\nexport default function GuestCheckInForm() {\r\n  const {\r\n    formData,\r\n    loading,\r\n    error,\r\n    isVisitorMode,\r\n    isSecurityMode,\r\n    isResidentMode,\r\n    handleInputChange,\r\n    handleSubmit\r\n  } = useVisitorForm();\r\n\r\n  const getFormTitle = () => {\r\n    if (isVisitorMode) return \"Complete Your Invitation\";\r\n    if (isSecurityMode) return \"Security Check-in\";\r\n    return \"Invite a Visitor\";\r\n  };\r\n\r\n  const getFormDescription = () => {\r\n    if (isVisitorMode) {\r\n      return \"Hi there! Please complete the form for a smooth check-in process.\";\r\n    }\r\n    if (isSecurityMode) {\r\n      return \"Fill in the visitor details for gate entry.\";\r\n    }\r\n    return \"Fill in guest details to send an invitation.\";\r\n  };\r\n\r\n  // Field configuration based on mode\r\n  const getFieldConfig = () => {\r\n    const baseFields = [\r\n      { \r\n        key: 'guestName', \r\n        label: 'Guest Name *', \r\n        placeholder: 'Enter guest name',\r\n        required: true\r\n      },\r\n      { \r\n        key: 'phoneNumber', \r\n        label: 'Phone Number *', \r\n        placeholder: '+254-723-456-789',\r\n        required: true\r\n      },\r\n      { \r\n        key: 'email', \r\n        label: 'Email *', \r\n        placeholder: 'e.g guest@email.com',\r\n        required: true\r\n      },\r\n      { \r\n        key: 'date', \r\n        label: 'Visit Date *', \r\n        placeholder: 'dd/mm/yyyy',\r\n        type: 'date',\r\n        required: true\r\n      },\r\n      { \r\n        key: 'carPlate', \r\n        label: 'Car Number Plate (Optional)', \r\n        placeholder: 'e.g KCW 123K',\r\n        required: false\r\n      }\r\n    ];\r\n\r\n    // Add mode-specific fields\r\n    if (isVisitorMode) {\r\n      // Visitor mode - hide house number, show host name as readonly\r\n      baseFields.push({\r\n        key: 'hostName',\r\n        label: 'Host Name/Unit',\r\n        placeholder: 'Host information',\r\n        readOnly: true,\r\n        required: false\r\n      });\r\n    } else {\r\n      // Resident/Security mode - show house number field\r\n      baseFields.push({\r\n        key: 'houseNumber',\r\n        label: 'House Number *',\r\n        placeholder: 'e.g 302b',\r\n        required: true\r\n      });\r\n      \r\n      if (isResidentMode) {\r\n        baseFields.push({\r\n          key: 'hostName',\r\n          label: 'Host Name',\r\n          placeholder: 'Your name',\r\n          required: true\r\n        });\r\n      }\r\n    }\r\n\r\n    return baseFields;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"text-[#00580d]\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-16 w-[280px]\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between w-full\">\r\n        <div className=\"flex items-center gap-1 bg-[#d1c9fa] border border-[#2d2264] rounded px-1 py-1 h-[29px]\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <img src=\"mask-group0.svg\" alt=\"Flag\" className=\"w-4 h-4\" />\r\n            <div className=\"text-[#2d2264] text-sm font-medium\">EN</div>\r\n          </div>\r\n          <img src=\"dropdown0.svg\" alt=\"Dropdown\" className=\"w-5 h-5\" />\r\n        </div>\r\n        <img\r\n          src=\"material-symbols-light-close-rounded0.svg\"\r\n          alt=\"Close\"\r\n          className=\"w-[29px] h-[29px] rounded cursor-pointer\"\r\n        />\r\n      </div>\r\n\r\n      {/* Form Content */}\r\n      <div className=\"flex flex-col items-center gap-4 w-full\">\r\n        <div className=\"text-[#00580d] text-sm font-medium text-left\">\r\n          <h2 className=\"font-bold mb-2\">{getFormTitle()}</h2>\r\n          <p>{getFormDescription()}</p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"text-red-500 text-sm text-center w-full\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 w-full\">\r\n          {getFieldConfig().map(({ key, label, placeholder, type = 'text', required, readOnly }) => (\r\n            <div key={key} className=\"flex flex-col gap-1 w-full\">\r\n              <label className=\"text-[#00d21e] text-xs font-medium\">{label}</label>\r\n              <div className=\"bg-white border border-[#54e168] rounded-xl px-3 py-2 text-sm text-[#00580d]\">\r\n                <input\r\n                  type={type}\r\n                  placeholder={placeholder}\r\n                  value={formData[key]}\r\n                  onChange={(e) => handleInputChange(key, e.target.value)}\r\n                  required={required}\r\n                  readOnly={readOnly}\r\n                  className={`w-full outline-none bg-transparent placeholder:text-xs placeholder:font-medium ${\r\n                    readOnly ? 'opacity-60' : ''\r\n                  }`}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {/* Photo Upload - Required for visitor mode */}\r\n          {(isVisitorMode || isSecurityMode) && (\r\n            <div className=\"flex flex-col gap-1 w-full\">\r\n              <label className=\"text-[#00d21e] text-xs font-medium\">\r\n                Photo {isVisitorMode ? '*' : '(Optional)'}\r\n              </label>\r\n              <div className=\"flex items-center justify-between border border-[#00d21e] rounded-xl overflow-hidden\">\r\n                <span className=\"text-[#9abd9f] text-xs px-3\">PNG/JPG</span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => document.getElementById('photo-upload').click()}\r\n                  className=\"bg-[#00d21e] text-white text-xs font-semibold px-4 py-2 rounded-r-xl\"\r\n                >\r\n                  Upload\r\n                </button>\r\n                <input\r\n                  id=\"photo-upload\"\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => handleInputChange('photo', e.target.files[0])}\r\n                  className=\"hidden\"\r\n                  required={isVisitorMode}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"bg-[#00d21e] text-white rounded-[24px] px-6 py-2 shadow-md text-center mt-4\">\r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading}\r\n              className=\"text-white text-base font-medium w-full\"\r\n            >\r\n              {loading ? 'Submitting...' : \r\n               isVisitorMode ? 'Complete Registration' :\r\n               isResidentMode ? 'Send Invitation' : 'Register Visitor'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}