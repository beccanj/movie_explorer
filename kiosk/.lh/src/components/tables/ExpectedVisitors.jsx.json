{
    "sourceFile": "src/components/tables/ExpectedVisitors.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 60,
            "patches": [
                {
                    "date": 1753361515655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753361949614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,92 +1,151 @@\n-import React from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableFooter,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n+import React, { useState } from 'react';\r\n+import { ChevronDown, Download, MoreVertical } from 'lucide-react';\r\n \r\n-export function VisitorsTable({ visitors = [], title = \"Expected Visitors\" }) {\r\n+const ExpectedVisitorsTable = ({ \r\n+  visitors = [], \r\n+  title = \"Expected Visitors\",\r\n+  initialEntries = 5,\r\n+  showExport = true,\r\n+  onExport = null,\r\n+  onActionClick = null \r\n+}) => {\r\n+  const [showEntries, setShowEntries] = useState(initialEntries);\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+\r\n+  const getTypeStyle = (type) => {\r\n+    switch (type) {\r\n+      case \"New\":\r\n+        return \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      case \"Recurring\":\r\n+        return \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      case \"Service\":\r\n+        return \"bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      default:\r\n+        return \"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"w-full bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">{title}</h2>\r\n+    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n+      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n+        {/* Header */}\r\n+        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n+          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n+        </div>\r\n \r\n-        {/* Example: Export Button */}\r\n-        <button className=\"flex items-center gap-2 border px-3 py-1 rounded text-sm text-blue-600 hover:bg-blue-50\">\r\n-          \r\n-          Export\r\n-        </button>\r\n-      </div>\r\n+        {/* Controls */}\r\n+        <div className=\"px-6 py-4 flex justify-between items-center border-b border-gray-200\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select \r\n+                value={showEntries}\r\n+                onChange={(e) => setShowEntries(Number(e.target.value))}\r\n+                className=\"appearance-none bg-white border border-gray-300 rounded px-3 py-1 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n+              >\r\n+                <option value={5}>5</option>\r\n+                <option value={10}>10</option>\r\n+                <option value={25}>25</option>\r\n+                <option value={50}>50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n \r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">\r\n-          A list of expected visitors.\r\n-        </TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead>Visitor Name</TableHead>\r\n-            <TableHead>Phone No.</TableHead>\r\n-            <TableHead>Visit Unit</TableHead>\r\n-            <TableHead>Visitor Type</TableHead>\r\n-            <TableHead>Visit Date</TableHead>\r\n-            <TableHead className=\"text-right\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {visitors.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-6\">\r\n-                No visitors found.\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            visitors.map((visitor, i) => (\r\n-              <TableRow\r\n-                key={`${visitor.name}-${i}`}\r\n-                className={i % 2 === 0 ? \"bg-[#f9f9f9]\" : \"\"}\r\n-              >\r\n-                <TableCell>{visitor.name}</TableCell>\r\n-                <TableCell>{visitor.phone}</TableCell>\r\n-                <TableCell>{visitor.unit}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-2 py-1 rounded-full text-xs font-medium \r\n-                      ${visitor.type === \"New\"\r\n-                        ? \"bg-green-100 text-green-600\"\r\n-                        : visitor.type === \"Recurring\"\r\n-                        ? \"bg-yellow-100 text-yellow-600\"\r\n-                        : \"bg-blue-100 text-blue-600\"\r\n-                      }`}\r\n-                  >\r\n-                    {visitor.type}\r\n-                  </span>\r\n-                </TableCell>\r\n-                <TableCell>\r\n-                  {new Date(visitor.date).toLocaleDateString()}\r\n-                </TableCell>\r\n-                <TableCell className=\"text-right\">\r\n-                  <button className=\"p-2 hover:bg-gray-100 rounded\">\r\n-                    <img\r\n-                      src=\"/icons/bi-three-dots-vertical0.svg\"\r\n-                      alt=\"Menu\"\r\n-                      className=\"w-4 h-4\"\r\n-                    />\r\n-                  </button>\r\n-                </TableCell>\r\n-              </TableRow>\r\n-            ))\r\n+          {showExport && (\r\n+            <button \r\n+              onClick={onExport}\r\n+              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n+            >\r\n+              <Download className=\"w-4 h-4\" />\r\n+              Export\r\n+            </button>\r\n           )}\r\n-        </TableBody>\r\n-      </Table>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full\">\r\n+            <thead className=\"bg-gray-50\">\r\n+              <tr>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visitor Name\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Phone No.\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visit Unit\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visitor Type\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visit Date\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Action\r\n+                </th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+              {visitors.slice(0, showEntries).map((visitor, index) => (\r\n+                <tr key={visitor.id} className=\"hover:bg-gray-50 transition-colors\">\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n+                    {visitor.name}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n+                    {visitor.phone}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n+                    {visitor.unit}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                    <span className={getTypeStyle(visitor.type)}>\r\n+                      {visitor.type}\r\n+                    </span>\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n+                    {visitor.date}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n+                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n+                      <MoreVertical className=\"w-5 h-5\" />\r\n+                    </button>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+\r\n+        {/* Pagination */}\r\n+        <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <button \r\n+              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n+              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n+            >\r\n+              Previous\r\n+            </button>\r\n+            <span className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded\">\r\n+              {currentPage}\r\n+            </span>\r\n+            <button \r\n+              onClick={() => setCurrentPage(currentPage + 1)}\r\n+              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n+            >\r\n+              Next\r\n+            </button>\r\n+          </div>\r\n+          <div className=\"text-sm text-gray-600\">\r\n+            Showing 1 to {Math.min(showEntries, visitors.length)} out of {visitors.length} entries\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n     </div>\r\n   );\r\n-}\r\n+};\r\n \r\n-export default VisitorsTable;\r\n+export default ExpectedVisitorsTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753362021775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,11 +138,9 @@\n             >\r\n               Next\r\n             </button>\r\n           </div>\r\n-          <div className=\"text-sm text-gray-600\">\r\n-            Showing 1 to {Math.min(showEntries, visitors.length)} out of {visitors.length} entries\r\n-          </div>\r\n+         \r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1753362031675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,149 @@\n+import React, { useState } from 'react';\r\n+import { ChevronDown, Download, MoreVertical } from 'lucide-react';\r\n+\r\n+const ExpectedVisitorsTable = ({ \r\n+  visitors = [], \r\n+  title = \"Expected Visitors\",\r\n+  initialEntries = 5,\r\n+  showExport = true,\r\n+  onExport = null,\r\n+  onActionClick = null \r\n+}) => {\r\n+  const [showEntries, setShowEntries] = useState(initialEntries);\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+\r\n+  const getTypeStyle = (type) => {\r\n+    switch (type) {\r\n+      case \"New\":\r\n+        return \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      case \"Recurring\":\r\n+        return \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      case \"Service\":\r\n+        return \"bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      default:\r\n+        return \"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n+      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n+        {/* Header */}\r\n+        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n+          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n+        </div>\r\n+\r\n+        {/* Controls */}\r\n+        <div className=\"px-6 py-4 flex justify-between items-center border-b border-gray-200\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select \r\n+                value={showEntries}\r\n+                onChange={(e) => setShowEntries(Number(e.target.value))}\r\n+                className=\"appearance-none bg-white border border-gray-300 rounded px-3 py-1 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n+              >\r\n+                <option value={5}>5</option>\r\n+                <option value={10}>10</option>\r\n+                <option value={25}>25</option>\r\n+                <option value={50}>50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          {showExport && (\r\n+            <button \r\n+              onClick={onExport}\r\n+              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n+            >\r\n+              <Download className=\"w-4 h-4\" />\r\n+              Export\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full\">\r\n+            <thead className=\"bg-gray-50\">\r\n+              <tr>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visitor Name\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Phone No.\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visit Unit\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visitor Type\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visit Date\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Action\r\n+                </th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+              {visitors.slice(0, showEntries).map((visitor, index) => (\r\n+                <tr key={visitor.id} className=\"hover:bg-gray-50 transition-colors\">\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n+                    {visitor.name}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n+                    {visitor.phone}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n+                    {visitor.unit}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                    <span className={getTypeStyle(visitor.type)}>\r\n+                      {visitor.type}\r\n+                    </span>\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n+                    {visitor.date}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n+                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n+                      <MoreVertical className=\"w-5 h-5\" />\r\n+                    </button>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+\r\n+        {/* Pagination */}\r\n+        <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <button \r\n+              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n+              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n+            >\r\n+              Previous\r\n+            </button>\r\n+            <span className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded\">\r\n+              {currentPage}\r\n+            </span>\r\n+            <button \r\n+              onClick={() => setCurrentPage(currentPage + 1)}\r\n+              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n+            >\r\n+              Next\r\n+            </button>\r\n+          </div>\r\n+         \r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default ExpectedVisitorsTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753362037967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+import React, { useState } from 'react';\r\n+import { ChevronDown, Download, MoreVertical } from 'lucide-react';\r\n+\r\n+const ExpectedVisitorsTable = ({ \r\n+  visitors = [], \r\n+  title = \"Expected Visitors\",\r\n+  initialEntries = 5,\r\n+  showExport = true,\r\n+  onExport = null,\r\n+  onActionClick = null \r\n+}) => {\r\n+  const [showEntries, setShowEntries] = useState(initialEntries);\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+\r\n+  const getTypeStyle = (type) => {\r\n+    switch (type) {\r\n+      case \"New\":\r\n+        return \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      case \"Recurring\":\r\n+        return \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      case \"Service\":\r\n+        return \"bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      default:\r\n+        return \"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n+      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n+        {/* Header */}\r\n+        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n+          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n+        </div>\r\n+\r\n+        {/* Controls */}\r\n+        <div className=\"px-6 py-4 flex justify-between items-center border-b border-gray-200\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select \r\n+                value={showEntries}\r\n+                onChange={(e) => setShowEntries(Number(e.target.value))}\r\n+                className=\"appearance-none bg-white border border-gray-300 rounded px-3 py-1 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n+              >\r\n+                <option value={5}>5</option>\r\n+                <option value={10}>10</option>\r\n+                <option value={25}>25</option>\r\n+                <option value={50}>50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          {showExport && (\r\n+            <button \r\n+              onClick={onExport}\r\n+              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n+            >\r\n+              <Download className=\"w-4 h-4\" />\r\n+              Export\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full\">\r\n+            <thead className=\"bg-gray-50\">\r\n+              <tr>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visitor Name\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Phone No.\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visit Unit\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visitor Type\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visit Date\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Action\r\n+                </th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+              {visitors.slice(0, showEntries).map((visitor, index) => (\r\n+                <tr key={visitor.id} className=\"hover:bg-gray-50 transition-colors\">\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n+                    {visitor.name}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n+                    {visitor.phone}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n+                    {visitor.unit}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                    <span className={getTypeStyle(visitor.type)}>\r\n+                      {visitor.type}\r\n+                    </span>\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n+                    {visitor.date}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n+                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n+                      <MoreVertical className=\"w-5 h-5\" />\r\n+                    </button>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+\r\n+        {/* Pagination */}\r\n+        <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <button \r\n+              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n+              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n+            >\r\n+              Previous\r\n+            </button>\r\n+            <span className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded\">\r\n+              {currentPage}\r\n+            </span>\r\n+            <button \r\n+              onClick={() => setCurrentPage(currentPage + 1)}\r\n+              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n+            >\r\n+              Next\r\n+            </button>\r\n+          </div>\r\n+         \r\n+        </div>\r\n+      </div>\r\n+       <div className=\"text-sm text-gray-600\">\r\n+            Showing 1 to {Math.min(showEntries, visitors.length)} out of {visitors.length} entries\r\n+          </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default ExpectedVisitorsTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753362199359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+import React, { useState } from 'react';\r\n+import { ChevronDown, Download, MoreVertical } from 'lucide-react';\r\n+\r\n+const ExpectedVisitorsTable = ({ \r\n+  visitors = [], \r\n+  title = \"Expected Visitors\",\r\n+  initialEntries = 5,\r\n+  showExport = true,\r\n+  onExport = null,\r\n+  onActionClick = null \r\n+}) => {\r\n+  const [showEntries, setShowEntries] = useState(initialEntries);\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+\r\n+  const getTypeStyle = (type) => {\r\n+    switch (type) {\r\n+      case \"New\":\r\n+        return \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      case \"Recurring\":\r\n+        return \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      case \"Service\":\r\n+        return \"bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+      default:\r\n+        return \"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n+      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n+        {/* Header */}\r\n+        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n+          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n+        </div>\r\n+\r\n+        {/* Controls */}\r\n+        <div className=\"px-6 py-4 flex justify-between items-center border-b border-gray-200\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select \r\n+                value={showEntries}\r\n+                onChange={(e) => setShowEntries(Number(e.target.value))}\r\n+                className=\"appearance-none bg-white border border-gray-300 rounded px-3 py-1 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n+              >\r\n+                <option value={5}>5</option>\r\n+                <option value={10}>10</option>\r\n+                <option value={25}>25</option>\r\n+                <option value={50}>50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          {showExport && (\r\n+            <button \r\n+              onClick={onExport}\r\n+              className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+            >\r\n+              <Download className=\"w-4 h-4\" />\r\n+              Export\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full\">\r\n+            <thead className=\"bg-gray-50\">\r\n+              <tr>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visitor Name\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Phone No.\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visit Unit\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visitor Type\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Visit Date\r\n+                </th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n+                  Action\r\n+                </th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+              {visitors.slice(0, showEntries).map((visitor, index) => (\r\n+                <tr key={visitor.id} className=\"hover:bg-gray-50 transition-colors\">\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n+                    {visitor.name}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n+                    {visitor.phone}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n+                    {visitor.unit}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                    <span className={getTypeStyle(visitor.type)}>\r\n+                      {visitor.type}\r\n+                    </span>\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n+                    {visitor.date}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n+                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n+                      <MoreVertical className=\"w-5 h-5\" />\r\n+                    </button>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+\r\n+        {/* Pagination */}\r\n+        <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <button \r\n+              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n+              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n+            >\r\n+              Previous\r\n+            </button>\r\n+            <span className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded\">\r\n+              {currentPage}\r\n+            </span>\r\n+            <button \r\n+              onClick={() => setCurrentPage(currentPage + 1)}\r\n+              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n+            >\r\n+              Next\r\n+            </button>\r\n+          </div>\r\n+         \r\n+        </div>\r\n+      </div>\r\n+       <div className=\"text-sm text-gray-600\">\r\n+            Showing 1 to {Math.min(showEntries, visitors.length)} out of {visitors.length} entries\r\n+          </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default ExpectedVisitorsTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753363172320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { getAllVisitors } from \"../../services/visitorservice\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown } from \"lucide-react\";\r\n+\r\n+export default function Visitors() {\r\n+  const [visitors, setVisitors] = useState([]);\r\n+  const [filteredAllVisitors, setFilteredAllVisitors] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [totalEntries, setTotalEntries] = useState(0);\r\n+\r\n+  useEffect(() => {\r\n+    fetchVisitors();\r\n+  }, [currentPage, entriesPerPage, visitorTypeFilter]);\r\n+\r\n+  const fetchVisitors = async () => {\r\n+    setLoading(true);\r\n+    try {\r\n+      const res = await getAllVisitors();\r\n+      if (res.result_code === 0) {\r\n+        let allData = res.data;\r\n+\r\n+        if (visitorTypeFilter !== \"all\") {\r\n+          allData = allData.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+        }\r\n+\r\n+        setFilteredAllVisitors(allData);\r\n+        setTotalEntries(allData.length);\r\n+\r\n+        const start = (currentPage - 1) * entriesPerPage;\r\n+        const end = start + entriesPerPage;\r\n+        const paginated = allData.slice(start, end);\r\n+\r\n+        setVisitors(paginated);\r\n+      } else {\r\n+        setVisitors([]);\r\n+        setFilteredAllVisitors([]);\r\n+        setTotalEntries(0);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching visitors:\", error);\r\n+      setVisitors([]);\r\n+      setFilteredAllVisitors([]);\r\n+      setTotalEntries(0);\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredAllVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+\r\n+  const handleNext = () => {\r\n+    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n+  };\r\n+\r\n+  const handlePrevious = () => {\r\n+    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n+  };\r\n+\r\n+  const handleEntriesChange = (e) => {\r\n+    setEntriesPerPage(Number(e.target.value));\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  const handleFilterChange = (e) => {\r\n+    setVisitorTypeFilter(e.target.value);\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Visitor Logs</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={handleEntriesChange}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={handleFilterChange}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">Loading...</div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : visitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">No visitors found.</div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                visitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{visitor.visitor_name}</TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <button className=\"text-gray-500 hover:text-gray-800 text-xl\">⋯</button>\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753363304539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n-import React, { useState, useEffect } from \"react\";\r\n-import { getAllVisitors } from \"../../services/visitorservice\";\r\n+import React, { useState } from \"react\";\r\n import {\r\n   Table,\r\n   TableBody,\r\n   TableCell,\r\n@@ -9,58 +8,29 @@\n   TableRow,\r\n } from \"@/components/ui/table\";\r\n import { Upload, ChevronDown } from \"lucide-react\";\r\n \r\n-export default function Visitors() {\r\n-  const [visitors, setVisitors] = useState([]);\r\n-  const [filteredAllVisitors, setFilteredAllVisitors] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n   const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [totalEntries, setTotalEntries] = useState(0);\r\n \r\n-  useEffect(() => {\r\n-    fetchVisitors();\r\n-  }, [currentPage, entriesPerPage, visitorTypeFilter]);\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n \r\n-  const fetchVisitors = async () => {\r\n-    setLoading(true);\r\n-    try {\r\n-      const res = await getAllVisitors();\r\n-      if (res.result_code === 0) {\r\n-        let allData = res.data;\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n \r\n-        if (visitorTypeFilter !== \"all\") {\r\n-          allData = allData.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-        }\r\n-\r\n-        setFilteredAllVisitors(allData);\r\n-        setTotalEntries(allData.length);\r\n-\r\n-        const start = (currentPage - 1) * entriesPerPage;\r\n-        const end = start + entriesPerPage;\r\n-        const paginated = allData.slice(start, end);\r\n-\r\n-        setVisitors(paginated);\r\n-      } else {\r\n-        setVisitors([]);\r\n-        setFilteredAllVisitors([]);\r\n-        setTotalEntries(0);\r\n-      }\r\n-    } catch (error) {\r\n-      console.error(\"Error fetching visitors:\", error);\r\n-      setVisitors([]);\r\n-      setFilteredAllVisitors([]);\r\n-      setTotalEntries(0);\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n   const handleExportCSV = () => {\r\n     const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredAllVisitors.map((v) => [\r\n+    const rows = filteredVisitors.map((v) => [\r\n       v.visitor_name,\r\n       v.phone_number,\r\n       v.visitor_type,\r\n       v.host_unit || \"N/A\",\r\n@@ -79,28 +49,8 @@\n     link.click();\r\n     document.body.removeChild(link);\r\n   };\r\n \r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-\r\n-  const handleNext = () => {\r\n-    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n-  };\r\n-\r\n-  const handlePrevious = () => {\r\n-    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n-  };\r\n-\r\n-  const handleEntriesChange = (e) => {\r\n-    setEntriesPerPage(Number(e.target.value));\r\n-    setCurrentPage(1);\r\n-  };\r\n-\r\n-  const handleFilterChange = (e) => {\r\n-    setVisitorTypeFilter(e.target.value);\r\n-    setCurrentPage(1);\r\n-  };\r\n-\r\n   return (\r\n     <>\r\n       <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n         {/* Header */}\r\n@@ -122,9 +72,12 @@\n             <div className=\"relative\">\r\n               <select\r\n                 className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n                 value={entriesPerPage}\r\n-                onChange={handleEntriesChange}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n               >\r\n                 <option value=\"5\">5</option>\r\n                 <option value=\"10\">10</option>\r\n                 <option value=\"25\">25</option>\r\n@@ -138,9 +91,12 @@\n           <div className=\"relative\">\r\n             <select\r\n               className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n               value={visitorTypeFilter}\r\n-              onChange={handleFilterChange}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n             >\r\n               <option value=\"all\">All</option>\r\n               <option value=\"recurring\">Recurring</option>\r\n               <option value=\"service\">Service</option>\r\n@@ -167,27 +123,35 @@\n             <TableBody>\r\n               {loading ? (\r\n                 <TableRow>\r\n                   <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">Loading...</div>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n                   </TableCell>\r\n                 </TableRow>\r\n-              ) : visitors.length === 0 ? (\r\n+              ) : currentVisitors.length === 0 ? (\r\n                 <TableRow>\r\n                   <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">No visitors found.</div>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n                   </TableCell>\r\n                 </TableRow>\r\n               ) : (\r\n-                visitors.map((visitor, index) => (\r\n+                currentVisitors.map((visitor, index) => (\r\n                   <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{visitor.visitor_name}</TableCell>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n                     <TableCell>{visitor.phone_number}</TableCell>\r\n                     <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n                     <TableCell>{visitor.visitor_type}</TableCell>\r\n                     <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n                     <TableCell>\r\n-                      <button className=\"text-gray-500 hover:text-gray-800 text-xl\">⋯</button>\r\n+                      <button className=\"text-gray-500 hover:text-gray-800 text-xl\">\r\n+                        ⋯\r\n+                      </button>\r\n                     </TableCell>\r\n                   </TableRow>\r\n                 ))\r\n               )}\r\n@@ -199,9 +163,9 @@\n       {/* Pagination */}\r\n       <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n         <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n           <button\r\n-            onClick={handlePrevious}\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n             disabled={currentPage === 1}\r\n             className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n           >\r\n             Previous\r\n@@ -209,623 +173,23 @@\n           <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n             {currentPage}\r\n           </button>\r\n           <button\r\n-            onClick={handleNext}\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n             disabled={currentPage === totalPages}\r\n             className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n           >\r\n             Next\r\n           </button>\r\n         </div>\r\n \r\n         <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n-          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n           {totalEntries} entries\r\n         </div>\r\n       </div>\r\n     </>\r\n   );\r\n }\r\n-import React, { useState } from 'react';\r\n-import { ChevronDown, Download, MoreVertical } from 'lucide-react';\r\n-\r\n-const ExpectedVisitorsTable = ({ \r\n-  visitors = [], \r\n-  title = \"Expected Visitors\",\r\n-  initialEntries = 5,\r\n-  showExport = true,\r\n-  onExport = null,\r\n-  onActionClick = null \r\n-}) => {\r\n-  const [showEntries, setShowEntries] = useState(initialEntries);\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-\r\n-  const getTypeStyle = (type) => {\r\n-    switch (type) {\r\n-      case \"New\":\r\n-        return \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      case \"Recurring\":\r\n-        return \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      case \"Service\":\r\n-        return \"bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      default:\r\n-        return \"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n-      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n-        {/* Header */}\r\n-        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n-          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n-        </div>\r\n-\r\n-        {/* Controls */}\r\n-        <div className=\"px-6 py-4 flex justify-between items-center border-b border-gray-200\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select \r\n-                value={showEntries}\r\n-                onChange={(e) => setShowEntries(Number(e.target.value))}\r\n-                className=\"appearance-none bg-white border border-gray-300 rounded px-3 py-1 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n-              >\r\n-                <option value={5}>5</option>\r\n-                <option value={10}>10</option>\r\n-                <option value={25}>25</option>\r\n-                <option value={50}>50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          {showExport && (\r\n-            <button \r\n-              onClick={onExport}\r\n-              className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-            >\r\n-              <Download className=\"w-4 h-4\" />\r\n-              Export\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full\">\r\n-            <thead className=\"bg-gray-50\">\r\n-              <tr>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visitor Name\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Phone No.\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visit Unit\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visitor Type\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visit Date\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Action\r\n-                </th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n-              {visitors.slice(0, showEntries).map((visitor, index) => (\r\n-                <tr key={visitor.id} className=\"hover:bg-gray-50 transition-colors\">\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n-                    {visitor.name}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n-                    {visitor.phone}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n-                    {visitor.unit}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n-                    <span className={getTypeStyle(visitor.type)}>\r\n-                      {visitor.type}\r\n-                    </span>\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n-                    {visitor.date}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n-                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n-                      <MoreVertical className=\"w-5 h-5\" />\r\n-                    </button>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-\r\n-        {/* Pagination */}\r\n-        <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <button \r\n-              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n-              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n-            >\r\n-              Previous\r\n-            </button>\r\n-            <span className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded\">\r\n-              {currentPage}\r\n-            </span>\r\n-            <button \r\n-              onClick={() => setCurrentPage(currentPage + 1)}\r\n-              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n-            >\r\n-              Next\r\n-            </button>\r\n-          </div>\r\n-         \r\n-        </div>\r\n-      </div>\r\n-       <div className=\"text-sm text-gray-600\">\r\n-            Showing 1 to {Math.min(showEntries, visitors.length)} out of {visitors.length} entries\r\n-          </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default ExpectedVisitorsTable;\n-import React, { useState } from 'react';\r\n-import { ChevronDown, Download, MoreVertical } from 'lucide-react';\r\n-\r\n-const ExpectedVisitorsTable = ({ \r\n-  visitors = [], \r\n-  title = \"Expected Visitors\",\r\n-  initialEntries = 5,\r\n-  showExport = true,\r\n-  onExport = null,\r\n-  onActionClick = null \r\n-}) => {\r\n-  const [showEntries, setShowEntries] = useState(initialEntries);\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-\r\n-  const getTypeStyle = (type) => {\r\n-    switch (type) {\r\n-      case \"New\":\r\n-        return \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      case \"Recurring\":\r\n-        return \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      case \"Service\":\r\n-        return \"bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      default:\r\n-        return \"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n-      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n-        {/* Header */}\r\n-        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n-          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n-        </div>\r\n-\r\n-        {/* Controls */}\r\n-        <div className=\"px-6 py-4 flex justify-between items-center border-b border-gray-200\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select \r\n-                value={showEntries}\r\n-                onChange={(e) => setShowEntries(Number(e.target.value))}\r\n-                className=\"appearance-none bg-white border border-gray-300 rounded px-3 py-1 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n-              >\r\n-                <option value={5}>5</option>\r\n-                <option value={10}>10</option>\r\n-                <option value={25}>25</option>\r\n-                <option value={50}>50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          {showExport && (\r\n-            <button \r\n-              onClick={onExport}\r\n-              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n-            >\r\n-              <Download className=\"w-4 h-4\" />\r\n-              Export\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full\">\r\n-            <thead className=\"bg-gray-50\">\r\n-              <tr>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visitor Name\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Phone No.\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visit Unit\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visitor Type\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visit Date\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Action\r\n-                </th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n-              {visitors.slice(0, showEntries).map((visitor, index) => (\r\n-                <tr key={visitor.id} className=\"hover:bg-gray-50 transition-colors\">\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n-                    {visitor.name}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n-                    {visitor.phone}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n-                    {visitor.unit}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n-                    <span className={getTypeStyle(visitor.type)}>\r\n-                      {visitor.type}\r\n-                    </span>\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n-                    {visitor.date}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n-                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n-                      <MoreVertical className=\"w-5 h-5\" />\r\n-                    </button>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-\r\n-        {/* Pagination */}\r\n-        <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <button \r\n-              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n-              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n-            >\r\n-              Previous\r\n-            </button>\r\n-            <span className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded\">\r\n-              {currentPage}\r\n-            </span>\r\n-            <button \r\n-              onClick={() => setCurrentPage(currentPage + 1)}\r\n-              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n-            >\r\n-              Next\r\n-            </button>\r\n-          </div>\r\n-         \r\n-        </div>\r\n-      </div>\r\n-       <div className=\"text-sm text-gray-600\">\r\n-            Showing 1 to {Math.min(showEntries, visitors.length)} out of {visitors.length} entries\r\n-          </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default ExpectedVisitorsTable;\n-import React, { useState } from 'react';\r\n-import { ChevronDown, Download, MoreVertical } from 'lucide-react';\r\n-\r\n-const ExpectedVisitorsTable = ({ \r\n-  visitors = [], \r\n-  title = \"Expected Visitors\",\r\n-  initialEntries = 5,\r\n-  showExport = true,\r\n-  onExport = null,\r\n-  onActionClick = null \r\n-}) => {\r\n-  const [showEntries, setShowEntries] = useState(initialEntries);\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-\r\n-  const getTypeStyle = (type) => {\r\n-    switch (type) {\r\n-      case \"New\":\r\n-        return \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      case \"Recurring\":\r\n-        return \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      case \"Service\":\r\n-        return \"bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      default:\r\n-        return \"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n-      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n-        {/* Header */}\r\n-        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n-          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n-        </div>\r\n-\r\n-        {/* Controls */}\r\n-        <div className=\"px-6 py-4 flex justify-between items-center border-b border-gray-200\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select \r\n-                value={showEntries}\r\n-                onChange={(e) => setShowEntries(Number(e.target.value))}\r\n-                className=\"appearance-none bg-white border border-gray-300 rounded px-3 py-1 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n-              >\r\n-                <option value={5}>5</option>\r\n-                <option value={10}>10</option>\r\n-                <option value={25}>25</option>\r\n-                <option value={50}>50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          {showExport && (\r\n-            <button \r\n-              onClick={onExport}\r\n-              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n-            >\r\n-              <Download className=\"w-4 h-4\" />\r\n-              Export\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full\">\r\n-            <thead className=\"bg-gray-50\">\r\n-              <tr>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visitor Name\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Phone No.\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visit Unit\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visitor Type\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visit Date\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Action\r\n-                </th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n-              {visitors.slice(0, showEntries).map((visitor, index) => (\r\n-                <tr key={visitor.id} className=\"hover:bg-gray-50 transition-colors\">\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n-                    {visitor.name}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n-                    {visitor.phone}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n-                    {visitor.unit}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n-                    <span className={getTypeStyle(visitor.type)}>\r\n-                      {visitor.type}\r\n-                    </span>\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n-                    {visitor.date}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n-                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n-                      <MoreVertical className=\"w-5 h-5\" />\r\n-                    </button>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-\r\n-        {/* Pagination */}\r\n-        <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <button \r\n-              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n-              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n-            >\r\n-              Previous\r\n-            </button>\r\n-            <span className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded\">\r\n-              {currentPage}\r\n-            </span>\r\n-            <button \r\n-              onClick={() => setCurrentPage(currentPage + 1)}\r\n-              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n-            >\r\n-              Next\r\n-            </button>\r\n-          </div>\r\n-         \r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default ExpectedVisitorsTable;\n-import React, { useState } from 'react';\r\n-import { ChevronDown, Download, MoreVertical } from 'lucide-react';\r\n-\r\n-const ExpectedVisitorsTable = ({ \r\n-  visitors = [], \r\n-  title = \"Expected Visitors\",\r\n-  initialEntries = 5,\r\n-  showExport = true,\r\n-  onExport = null,\r\n-  onActionClick = null \r\n-}) => {\r\n-  const [showEntries, setShowEntries] = useState(initialEntries);\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-\r\n-  const getTypeStyle = (type) => {\r\n-    switch (type) {\r\n-      case \"New\":\r\n-        return \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      case \"Recurring\":\r\n-        return \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      case \"Service\":\r\n-        return \"bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-      default:\r\n-        return \"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm font-medium\";\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n-      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n-        {/* Header */}\r\n-        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n-          <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n-        </div>\r\n-\r\n-        {/* Controls */}\r\n-        <div className=\"px-6 py-4 flex justify-between items-center border-b border-gray-200\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select \r\n-                value={showEntries}\r\n-                onChange={(e) => setShowEntries(Number(e.target.value))}\r\n-                className=\"appearance-none bg-white border border-gray-300 rounded px-3 py-1 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n-              >\r\n-                <option value={5}>5</option>\r\n-                <option value={10}>10</option>\r\n-                <option value={25}>25</option>\r\n-                <option value={50}>50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          {showExport && (\r\n-            <button \r\n-              onClick={onExport}\r\n-              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n-            >\r\n-              <Download className=\"w-4 h-4\" />\r\n-              Export\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full\">\r\n-            <thead className=\"bg-gray-50\">\r\n-              <tr>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visitor Name\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Phone No.\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visit Unit\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visitor Type\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Visit Date\r\n-                </th>\r\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n-                  Action\r\n-                </th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n-              {visitors.slice(0, showEntries).map((visitor, index) => (\r\n-                <tr key={visitor.id} className=\"hover:bg-gray-50 transition-colors\">\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n-                    {visitor.name}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n-                    {visitor.phone}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n-                    {visitor.unit}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n-                    <span className={getTypeStyle(visitor.type)}>\r\n-                      {visitor.type}\r\n-                    </span>\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n-                    {visitor.date}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n-                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n-                      <MoreVertical className=\"w-5 h-5\" />\r\n-                    </button>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-\r\n-        {/* Pagination */}\r\n-        <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <button \r\n-              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n-              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n-            >\r\n-              Previous\r\n-            </button>\r\n-            <span className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded\">\r\n-              {currentPage}\r\n-            </span>\r\n-            <button \r\n-              onClick={() => setCurrentPage(currentPage + 1)}\r\n-              className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n-            >\r\n-              Next\r\n-            </button>\r\n-          </div>\r\n-         \r\n-        </div>\r\n-      </div>\r\n\\ No newline at end of file\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default ExpectedVisitorsTable;\n"
                },
                {
                    "date": 1753363631112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     <>\r\n       <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n         {/* Header */}\r\n         <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Visitor Logs</h2>\r\n+          <h2 className=\"text-2xl font-semibold\">ExpectedVisitor Logs</h2>\r\n           <button\r\n             onClick={handleExportCSV}\r\n             className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n           >\r\n"
                },
                {
                    "date": 1753363636283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,195 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown } from \"lucide-react\";\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <button className=\"text-gray-500 hover:text-gray-800 text-xl\">\r\n+                        ⋯\r\n+                      </button>\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753363898231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,213 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown } from \"lucide-react\";\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                      <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753363920298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,5 +209,5 @@\n         </div>\r\n       </div>\r\n     </>\r\n   );\r\n-}\r\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1753363927521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,213 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, M } from \"lucide-react\";\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                      <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753363932727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,213 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                      <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753363988272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                      <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                   \r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753363994909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n                       <button\r\n                         onClick={() => handleAction(\"Resolved\", event, index)}\r\n                         className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n                       >\r\n-                        Resolved\r\n+                        View\r\n                       </button>\r\n                    \r\n                     </div>\r\n                   )}\r\n@@ -205,1034 +205,4 @@\n       </div>\r\n     </>\r\n   );\r\n }\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        {/* Header */}\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                      <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, M } from \"lucide-react\";\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        {/* Header */}\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                      <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown } from \"lucide-react\";\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        {/* Header */}\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                      <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown } from \"lucide-react\";\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        {/* Header */}\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell>\r\n-                      <button className=\"text-gray-500 hover:text-gray-800 text-xl\">\r\n-                        ⋯\r\n-                      </button>\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown } from \"lucide-react\";\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        {/* Header */}\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">ExpectedVisitor Logs</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell>\r\n-                      <button className=\"text-gray-500 hover:text-gray-800 text-xl\">\r\n-                        ⋯\r\n-                      </button>\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\n"
                },
                {
                    "date": 1753364150540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        \r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                      <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        View\r\n+                      </button>\r\n+                   \r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753364189522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        \r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                      <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        View\r\n+                      </button>\r\n+                   \r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753419776760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,209 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        \r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                      <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        View\r\n+                      </button>\r\n+                   \r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753419797500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,210 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n+\r\n+\r\n+export default function Visitors({ visitors = [], loading = false }) {\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? visitors\r\n+      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.status,\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"visitor_logs.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        \r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                      <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        View\r\n+                      </button>\r\n+                   \r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() =>\r\n+              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n+            }\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753419861095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,7 @@\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n"
                },
                {
                    "date": 1753419888280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,17 @@\n+// components/ExpectedVisitors.jsx\r\n+import React, { useState } from \"react\";\r\n+import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEn\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753420013297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+// components/ExpectedVisitors.jsx\r\n+import React, { useState } from \"react\";\r\n+import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753420096035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753420199346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Pagination */}\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753420764905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753420907315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+// import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753420918892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753420952783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753420976134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753421002758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,216 @@\n+\r\n+import React, { useState } from \"react\";\r\n+// ExpectedVisitors.jsx\r\n+import { useExpectedVisitors } from \"../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753421009444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,216 @@\n+\r\n+import React, { useState } from \"react\";\r\n+\r\n+import { useExpectedVisitors } from \"../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753421021381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.visitor_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753421932521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753421994730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.visitor_name,\r\n+      v.phone_number,\r\n+      v.visitor_type,\r\n+      v.host_unit || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"one-time\">One-time</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={6}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number}</TableCell>\r\n+                    <TableCell>{visitor.unit_number|| \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.visitor_type}</TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753422104525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Filter visitors based on visitor type\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", // Changed from visitor_name to full_name\r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", // Changed from host_unit to unit_number\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Status</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n+                        visitor.status === 'pending' \r\n+                          ? 'bg-yellow-100 text-yellow-800' \r\n+                          : visitor.status === 'approved'\r\n+                          ? 'bg-green-100 text-green-800'\r\n+                          : 'bg-gray-100 text-gray-800'\r\n+                      }`}>\r\n+                        {visitor.status || \"N/A\"}\r\n+                      </span>\r\n+                    </TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Edit\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            Edit\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n+                          >\r\n+                            Delete\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753422158170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Filter visitors based on visitor type\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", // \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", // Changed from host_unit to unit_number\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Status</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n+                        visitor.status === 'pending' \r\n+                          ? 'bg-yellow-100 text-yellow-800' \r\n+                          : visitor.status === 'approved'\r\n+                          ? 'bg-green-100 text-green-800'\r\n+                          : 'bg-gray-100 text-gray-800'\r\n+                      }`}>\r\n+                        {visitor.status || \"N/A\"}\r\n+                      </span>\r\n+                    </TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Edit\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            Edit\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n+                          >\r\n+                            Delete\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753422166833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,12 +43,12 @@\n \r\n   const handleExportCSV = () => {\r\n     const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n     const rows = filteredVisitors.map((v) => [\r\n-      v.full_name || \"N/A\", // \r\n+      v.full_name || \"N/A\", \r\n       v.phone_number || \"N/A\",\r\n       v.visitor_type || \"N/A\",\r\n-      v.unit_number || \"N/A\", // Changed from host_unit to unit_number\r\n+      v.unit_number || \"N/A\", \r\n       v.visit_date || \"N/A\",\r\n     ]);\r\n \r\n     const csvContent =\r\n@@ -236,4109 +236,5 @@\n         </div>\r\n       </div>\r\n     </>\r\n   );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Filter visitors based on visitor type\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.full_name || \"N/A\", // Changed from visitor_name to full_name\r\n-      v.phone_number || \"N/A\",\r\n-      v.visitor_type || \"N/A\",\r\n-      v.unit_number || \"N/A\", // Changed from host_unit to unit_number\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"visitor\">Visitor</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Status</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={7}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={7}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={visitor.id || index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.full_name || \"N/A\"}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n-                    <TableCell>\r\n-                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell>\r\n-                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n-                        visitor.status === 'pending' \r\n-                          ? 'bg-yellow-100 text-yellow-800' \r\n-                          : visitor.status === 'approved'\r\n-                          ? 'bg-green-100 text-green-800'\r\n-                          : 'bg-gray-100 text-gray-800'\r\n-                      }`}>\r\n-                        {visitor.status || \"N/A\"}\r\n-                      </span>\r\n-                    </TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"Edit\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            Edit\r\n-                          </button>\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n-                          >\r\n-                            Delete\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\n-\r\n-import React, { useState } from \"react\";\r\n-import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.full_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.unit_number|| \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.full_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-\r\n-import { useExpectedVisitors } from \"../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-// ExpectedVisitors.jsx\r\n-import { useExpectedVisitors } from \"../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-// import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      \r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-import useExpectedVisitors from \"../../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-import React, { useState } from \"react\";\r\n-import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-// components/ExpectedVisitors.jsx\r\n-import React, { useState } from \"react\";\r\n-import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown(openDropdown === index ? null : index);\r\n-  };\r\n-\r\n-  const handleAction = (action, e, index) => {\r\n-    e.stopPropagation();\r\n-    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? expectedVisitors\r\n-      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.visit_date || \"N/A\",\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"expected_visitors.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                    <TableCell className=\"relative dropdown-parent\">\r\n-                      <MoreHorizontal\r\n-                        className=\"cursor-pointer text-muted-foreground\"\r\n-                        onClick={() => toggleDropdown(index)}\r\n-                      />\r\n-                      {openDropdown === index && (\r\n-                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"View\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                          >\r\n-                            View\r\n-                          </button>\r\n-                        </div>\r\n-                      )}\r\n-                    </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-// components/ExpectedVisitors.jsx\r\n-import React, { useState } from \"react\";\r\n-import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEn\n-export default function ExpectedVisitors() {\r\n-  const { expectedVisitors, loading } = useExpectedVisitors();\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-import useExpectedVisitors from \"../hooks/useExpectedVisitors\";\r\n-\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        \r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        \r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                      <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        View\r\n-                      </button>\r\n-                   \r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        \r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        \r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                      <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        View\r\n-                      </button>\r\n-                   \r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        \r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        \r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                      <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        View\r\n-                      </button>\r\n-                   \r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        \r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                      <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        View\r\n-                      </button>\r\n-                   \r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n-\r\n-export default function Visitors({ visitors = [], loading = false }) {\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n-  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n-\r\n-  const filteredVisitors =\r\n-    visitorTypeFilter === \"all\"\r\n-      ? visitors\r\n-      : visitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-\r\n-  const totalEntries = filteredVisitors.length;\r\n-  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n-  const startIndex = (currentPage - 1) * entriesPerPage;\r\n-  const currentVisitors = filteredVisitors.slice(\r\n-    startIndex,\r\n-    startIndex + entriesPerPage\r\n-  );\r\n-\r\n-  const handleExportCSV = () => {\r\n-    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Status\"];\r\n-    const rows = filteredVisitors.map((v) => [\r\n-      v.visitor_name,\r\n-      v.phone_number,\r\n-      v.visitor_type,\r\n-      v.host_unit || \"N/A\",\r\n-      v.status,\r\n-    ]);\r\n-\r\n-    const csvContent =\r\n-      \"data:text/csv;charset=utf-8,\" +\r\n-      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n-\r\n-    const encodedUri = encodeURI(csvContent);\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = encodedUri;\r\n-    link.download = \"visitor_logs.csv\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n-        {/* Header */}\r\n-        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n-          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n-          <button\r\n-            onClick={handleExportCSV}\r\n-            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n-          >\r\n-            <Upload />\r\n-            Export\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"flex justify-between items-center px-6\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <span className=\"text-sm text-gray-600\">Show</span>\r\n-            <div className=\"relative\">\r\n-              <select\r\n-                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n-                value={entriesPerPage}\r\n-                onChange={(e) => {\r\n-                  setEntriesPerPage(Number(e.target.value));\r\n-                  setCurrentPage(1);\r\n-                }}\r\n-              >\r\n-                <option value=\"5\">5</option>\r\n-                <option value=\"10\">10</option>\r\n-                <option value=\"25\">25</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-            </div>\r\n-            <span className=\"text-sm text-gray-600\">entries</span>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <select\r\n-              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n-              value={visitorTypeFilter}\r\n-              onChange={(e) => {\r\n-                setVisitorTypeFilter(e.target.value);\r\n-                setCurrentPage(1);\r\n-              }}\r\n-            >\r\n-              <option value=\"all\">All</option>\r\n-              <option value=\"recurring\">Recurring</option>\r\n-              <option value=\"service\">Service</option>\r\n-              <option value=\"one-time\">One-time</option>\r\n-            </select>\r\n-            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Table */}\r\n-        <div className=\"p-4\">\r\n-          <Table>\r\n-            <TableHeader>\r\n-              <TableRow>\r\n-                <TableHead>Visitor Name</TableHead>\r\n-                <TableHead>Phone No.</TableHead>\r\n-                <TableHead>Visit Unit</TableHead>\r\n-                <TableHead>Visitor Type</TableHead>\r\n-                <TableHead>Visit Date</TableHead>\r\n-                <TableHead>Action</TableHead>\r\n-              </TableRow>\r\n-            </TableHeader>\r\n-\r\n-            <TableBody>\r\n-              {loading ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      Loading...\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : currentVisitors.length === 0 ? (\r\n-                <TableRow>\r\n-                  <TableCell colSpan={6}>\r\n-                    <div className=\"text-center text-gray-500 py-10\">\r\n-                      No visitors found.\r\n-                    </div>\r\n-                  </TableCell>\r\n-                </TableRow>\r\n-              ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">\r\n-                      {visitor.visitor_name}\r\n-                    </TableCell>\r\n-                    <TableCell>{visitor.phone_number}</TableCell>\r\n-                    <TableCell>{visitor.host_unit || \"N/A\"}</TableCell>\r\n-                    <TableCell>{visitor.visitor_type}</TableCell>\r\n-                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n-                      <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        View\r\n-                      </button>\r\n-                   \r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                  </TableRow>\r\n-                ))\r\n-              )}\r\n-            </TableBody>\r\n-          </Table>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n-        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n-          <button\r\n-            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n-            disabled={currentPage === 1}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Previous\r\n-          </button>\r\n-          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n-            {currentPage}\r\n-          </button>\r\n-          <button\r\n-            onClick={() =>\r\n-              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n-            }\r\n-            disabled={currentPage === totalPages}\r\n-            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n-          Showing {startIndex + 1} to{\" \"}\r\n-          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n-          {totalEntries} entries\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753422174719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Status</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n+                        visitor.status === 'pending' \r\n+                          ? 'bg-yellow-100 text-yellow-800' \r\n+                          : visitor.status === 'approved'\r\n+                          ? 'bg-green-100 text-green-800'\r\n+                          : 'bg-gray-100 text-gray-800'\r\n+                      }`}>\r\n+                        {visitor.status || \"N/A\"}\r\n+                      </span>\r\n+                    </TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Edit\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            Edit\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n+                          >\r\n+                            Delete\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753422243035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n             <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n           </div>\r\n         </div>\r\n \r\n-        {/* Table */}\r\n+        \r\n         <div className=\"p-4\">\r\n           <Table>\r\n             <TableHeader>\r\n               <TableRow>\r\n"
                },
                {
                    "date": 1753422298779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n                     </div>\r\n                   </TableCell>\r\n                 </TableRow>\r\n               ) : (\r\n-                currentVisitors.map((visitor, index) => (\r\n+               expected_visitorss.map((visitor, index) => (\r\n                   <TableRow key={visitor.id || index}>\r\n                     <TableCell className=\"font-medium\">\r\n                       {visitor.full_name || \"N/A\"}\r\n                     </TableCell>\r\n"
                },
                {
                    "date": 1753422311326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n+                        visitor.status === 'pending' \r\n+                          ? 'bg-yellow-100 text-yellow-800' \r\n+                          : visitor.status === 'approved'\r\n+                          ? 'bg-green-100 text-green-800'\r\n+                          : 'bg-gray-100 text-gray-800'\r\n+                      }`}>\r\n+                        {visitor.status || \"N/A\"}\r\n+                      </span>\r\n+                    </TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Edit\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            Edit\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n+                          >\r\n+                            Delete\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753422905354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n+                        visitor.status === 'pending' \r\n+                          ? 'bg-yellow-100 text-yellow-800' \r\n+                          : visitor.status === 'approved'\r\n+                          ? 'bg-green-100 text-green-800'\r\n+                          : 'bg-gray-100 text-gray-800'\r\n+                      }`}>\r\n+                        {visitor.status || \"N/A\"}\r\n+                      </span>\r\n+                    </TableCell>\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Edit\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            Edit\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n+                          >\r\n+                            Delete\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753422926742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Edit\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            Edit\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n+                          >\r\n+                            Delete\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753422941697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,224 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                         \r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n+                          >\r\n+                            Delete\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753422949172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,14 +174,9 @@\n                           >\r\n                             View\r\n                           </button>\r\n                          \r\n-                          <button\r\n-                            onClick={(e) => handleAction(\"Delete\", e, index)}\r\n-                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 text-red-600\"\r\n-                          >\r\n-                            Delete\r\n-                          </button>\r\n+                        \r\n                         </div>\r\n                       )}\r\n                     </TableCell>\r\n                   </TableRow>\r\n"
                },
                {
                    "date": 1753422956788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                         \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753423193876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753423239310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,217 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+  <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753423266094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\r\n+      \"Name\",\r\n+      \"Phone\",\r\n+      \"Visitor Type\",\r\n+      \"Host/Unit\",\r\n+      \"Visit Date\",\r\n+    ];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\",\r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">\r\n+                        {visitor.visitor_type || \"N/A\"}\r\n+                      </span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753423284658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,223 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\r\n+      \"Name\",\r\n+      \"Phone\",\r\n+      \"Visitor Type\",\r\n+      \"Host/Unit\",\r\n+      \"Visit Date\",\r\n+    ];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\",\r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\",\r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+                expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">\r\n+                        {visitor.visitor_type || \"N/A\"}\r\n+                      </span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+\r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>\r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n+z\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753423299286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753423305583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753423396426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,220 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  \r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753423424447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+\r\n+  const handleNext = () => {\r\n+    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n+  };\r\n+\r\n+  const handlePrevious = () => {\r\n+    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n+  };\r\n+\r\n+  const handleEntriesChange = (e) => {\r\n+    setEntriesPerPage(Number(e.target.value));\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  const handleFilterChange = (e) => {\r\n+    setVisitorTypeFilter(e.target.value);\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753423451769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  // const totalEntries = filteredVisitors.length;\r\n+  // const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  // const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  // const currentVisitors = filteredVisitors.slice(\r\n+  //   startIndex,\r\n+  //   startIndex + entriesPerPage\r\n+  // );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+\r\n+  const handleNext = () => {\r\n+    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n+  };\r\n+\r\n+  const handlePrevious = () => {\r\n+    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n+  };\r\n+\r\n+  const handleEntriesChange = (e) => {\r\n+    setEntriesPerPage(Number(e.target.value));\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  const handleFilterChange = (e) => {\r\n+    setVisitorTypeFilter(e.target.value);\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753423471976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  // const totalEntries = filteredVisitors.length;\r\n+  // const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  // const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  // const currentVisitors = filteredVisitors.slice(\r\n+  //   startIndex,\r\n+  //   startIndex + entriesPerPage\r\n+  // );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  // const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+\r\n+  const handleNext = () => {\r\n+    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n+  };\r\n+\r\n+  const handlePrevious = () => {\r\n+    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n+  };\r\n+\r\n+  const handleEntriesChange = (e) => {\r\n+    setEntriesPerPage(Number(e.target.value));\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  const handleFilterChange = (e) => {\r\n+    setVisitorTypeFilter(e.target.value);\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753423504182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  // const totalEntries = filteredVisitors.length;\r\n+  // const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  // const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  // const currentVisitors = filteredVisitors.slice(\r\n+  //   startIndex,\r\n+  //   startIndex + entriesPerPage\r\n+  // );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  // const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+\r\n+  const handleNext = () => {\r\n+    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n+  };\r\n+\r\n+  const handlePrevious = () => {\r\n+    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n+  };\r\n+\r\n+  const handleEntriesChange = (e) => {\r\n+    setEntriesPerPage(Number(e.target.value));\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  const handleFilterChange = (e) => {\r\n+    setVisitorTypeFilter(e.target.value);\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              // ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753423547610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  // const totalEntries = filteredVisitors.length;\r\n+  // const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  // const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+\r\n+  const handleNext = () => {\r\n+    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n+  };\r\n+\r\n+  const handlePrevious = () => {\r\n+    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n+  };\r\n+\r\n+  const handleEntriesChange = (e) => {\r\n+    setEntriesPerPage(Number(e.target.value));\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  const handleFilterChange = (e) => {\r\n+    setVisitorTypeFilter(e.target.value);\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753423662791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+\r\n+  const handleNext = () => {\r\n+    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n+  };\r\n+\r\n+  const handlePrevious = () => {\r\n+    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n+  };\r\n+\r\n+  const handleEntriesChange = (e) => {\r\n+    setEntriesPerPage(Number(e.target.value));\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  const handleFilterChange = (e) => {\r\n+    setVisitorTypeFilter(e.target.value);\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+               expectedVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={handlePrevious}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleNext}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n+          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753423880819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,219 @@\n+import React, { useState } from \"react\";\r\n+import { useExpectedVisitors } from \"../../hooks/useExpectedVisitors\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Upload, ChevronDown, MoreHorizontal } from \"lucide-react\";\r\n+\r\n+export default function ExpectedVisitors() {\r\n+  const { expectedVisitors, loading } = useExpectedVisitors();\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown(openDropdown === index ? null : index);\r\n+  };\r\n+\r\n+  const handleAction = (action, e, index) => {\r\n+    e.stopPropagation();\r\n+    console.log(`Action \"${action}\" on visitor index ${index}`);\r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  \r\n+  const filteredVisitors =\r\n+    visitorTypeFilter === \"all\"\r\n+      ? expectedVisitors\r\n+      : expectedVisitors.filter((v) => v.visitor_type === visitorTypeFilter);\r\n+\r\n+  const totalEntries = filteredVisitors.length;\r\n+  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n+  const startIndex = (currentPage - 1) * entriesPerPage;\r\n+  const currentVisitors = filteredVisitors.slice(\r\n+    startIndex,\r\n+    startIndex + entriesPerPage\r\n+  );\r\n+\r\n+  const handleExportCSV = () => {\r\n+    const headers = [\"Name\", \"Phone\", \"Visitor Type\", \"Host/Unit\", \"Visit Date\"];\r\n+    const rows = filteredVisitors.map((v) => [\r\n+      v.full_name || \"N/A\", \r\n+      v.phone_number || \"N/A\",\r\n+      v.visitor_type || \"N/A\",\r\n+      v.unit_number || \"N/A\", \r\n+      v.visit_date || \"N/A\",\r\n+    ]);\r\n+\r\n+    const csvContent =\r\n+      \"data:text/csv;charset=utf-8,\" +\r\n+      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n+\r\n+    const encodedUri = encodeURI(csvContent);\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = encodedUri;\r\n+    link.download = \"expected_visitors.csv\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+  \r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n+        <div className=\"flex justify-between items-center p-6 mb-4 border-b border-[rgba(0,0,0,0.3)]\">\r\n+          <h2 className=\"text-2xl font-semibold\">Expected Visitors</h2>\r\n+          <button\r\n+            onClick={handleExportCSV}\r\n+            className=\"flex items-center gap-2 h-12 px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition\"\r\n+          >\r\n+            <Upload />\r\n+            Export\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"flex justify-between items-center px-6\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-sm text-gray-600\">Show</span>\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-16 appearance-none pr-8\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => {\r\n+                  setEntriesPerPage(Number(e.target.value));\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              >\r\n+                <option value=\"5\">5</option>\r\n+                <option value=\"10\">10</option>\r\n+                <option value=\"25\">25</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            <span className=\"text-sm text-gray-600\">entries</span>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <select\r\n+              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm bg-white min-w-24 appearance-none pr-8\"\r\n+              value={visitorTypeFilter}\r\n+              onChange={(e) => {\r\n+                setVisitorTypeFilter(e.target.value);\r\n+                setCurrentPage(1);\r\n+              }}\r\n+            >\r\n+              <option value=\"all\">All</option>\r\n+              <option value=\"visitor\">Visitor</option>\r\n+              <option value=\"service\">Service</option>\r\n+              <option value=\"recurring\">Recurring</option>\r\n+            </select>\r\n+            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div className=\"p-4\">\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                <TableHead>Visitor Name</TableHead>\r\n+                <TableHead>Phone No.</TableHead>\r\n+                <TableHead>Visit Unit</TableHead>\r\n+                <TableHead>Visitor Type</TableHead>\r\n+                <TableHead>Visit Date</TableHead>                \r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+            <TableBody>\r\n+              {loading ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      Loading...\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : currentVisitors.length === 0 ? (\r\n+                <TableRow>\r\n+                  <TableCell colSpan={7}>\r\n+                    <div className=\"text-center text-gray-500 py-10\">\r\n+                      No visitors found.\r\n+                    </div>\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ) : (\r\n+              currentVisitors.map((visitor, index) => (\r\n+                  <TableRow key={visitor.id || index}>\r\n+                    <TableCell className=\"font-medium\">\r\n+                      {visitor.full_name || \"N/A\"}\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.phone_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>{visitor.unit_number || \"N/A\"}</TableCell>\r\n+                    <TableCell>\r\n+                      <span className=\"capitalize\">{visitor.visitor_type || \"N/A\"}</span>\r\n+                    </TableCell>\r\n+                    <TableCell>{visitor.visit_date || \"N/A\"}</TableCell>\r\n+                  \r\n+                    <TableCell className=\"relative dropdown-parent\">\r\n+                      <MoreHorizontal\r\n+                        className=\"cursor-pointer text-muted-foreground\"\r\n+                        onClick={() => toggleDropdown(index)}\r\n+                      />\r\n+                      {openDropdown === index && (\r\n+                        <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                          <button\r\n+                            onClick={(e) => handleAction(\"View\", e, index)}\r\n+                            className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                          >\r\n+                            View\r\n+                          </button>                        \r\n+                        \r\n+                        </div>\r\n+                      )}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                ))\r\n+              )}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n+        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n+            disabled={currentPage === 1}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Previous\r\n+          </button>\r\n+          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n+            {currentPage}\r\n+          </button>\r\n+          <button\r\n+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n+            disabled={currentPage === totalPages}\r\n+            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n+          Showing {startIndex + 1} to{\" \"}\r\n+          {Math.min(startIndex + entriesPerPage, totalEntries)} of{\" \"}\r\n+          {totalEntries} entries\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1753361515655,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableFooter,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\n\r\nexport function VisitorsTable({ visitors = [], title = \"Expected Visitors\" }) {\r\n  return (\r\n    <div className=\"w-full bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className=\"text-2xl font-semibold\">{title}</h2>\r\n\r\n        {/* Example: Export Button */}\r\n        <button className=\"flex items-center gap-2 border px-3 py-1 rounded text-sm text-blue-600 hover:bg-blue-50\">\r\n          \r\n          Export\r\n        </button>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <Table>\r\n        <TableCaption className=\"sr-only\">\r\n          A list of expected visitors.\r\n        </TableCaption>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Visitor Name</TableHead>\r\n            <TableHead>Phone No.</TableHead>\r\n            <TableHead>Visit Unit</TableHead>\r\n            <TableHead>Visitor Type</TableHead>\r\n            <TableHead>Visit Date</TableHead>\r\n            <TableHead className=\"text-right\">Action</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {visitors.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={6} className=\"text-center py-6\">\r\n                No visitors found.\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            visitors.map((visitor, i) => (\r\n              <TableRow\r\n                key={`${visitor.name}-${i}`}\r\n                className={i % 2 === 0 ? \"bg-[#f9f9f9]\" : \"\"}\r\n              >\r\n                <TableCell>{visitor.name}</TableCell>\r\n                <TableCell>{visitor.phone}</TableCell>\r\n                <TableCell>{visitor.unit}</TableCell>\r\n                <TableCell>\r\n                  <span\r\n                    className={`px-2 py-1 rounded-full text-xs font-medium \r\n                      ${visitor.type === \"New\"\r\n                        ? \"bg-green-100 text-green-600\"\r\n                        : visitor.type === \"Recurring\"\r\n                        ? \"bg-yellow-100 text-yellow-600\"\r\n                        : \"bg-blue-100 text-blue-600\"\r\n                      }`}\r\n                  >\r\n                    {visitor.type}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {new Date(visitor.date).toLocaleDateString()}\r\n                </TableCell>\r\n                <TableCell className=\"text-right\">\r\n                  <button className=\"p-2 hover:bg-gray-100 rounded\">\r\n                    <img\r\n                      src=\"/icons/bi-three-dots-vertical0.svg\"\r\n                      alt=\"Menu\"\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                  </button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VisitorsTable;\r\n"
        }
    ]
}