{
    "sourceFile": "src/components/tables/Incident.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1753077303366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753424574804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,93 +1,65 @@\n-import React, { useState, useMemo } from \"react\";\r\n+import React, { useState, useEffect } from \"react\";\r\n import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n+  Table, TableBody, TableCaption,\r\n+  TableCell, TableHead, TableHeader,\r\n   TableRow,\r\n } from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n+import { MoreHorizontal, Eye, User, FileText, X } from \"lucide-react\";\r\n \r\n const statusStyles = {\r\n   new: \"bg-red-100 text-red-700\",\r\n-  \"under_review\": \"bg-yellow-100 text-yellow-700\", \r\n+  under_review: \"bg-yellow-100 text-yellow-700\",\r\n   resolved: \"bg-green-100 text-green-700\",\r\n };\r\n \r\n-export default function IncidentTable({ incidentReports }) {\r\n-  const [selectedFilter, setSelectedFilter] = useState(\"all\");\r\n-  const [showActionsFor, setShowActionsFor] = useState(null);\r\n-  const [localIncidentReports, setLocalIncidentReports] = useState(incidentReports || []);\r\n+export default function IncidentTable({ incidentReports = [] }) {\r\n+  const [incidents, setIncidents] = useState(incidentReports);\r\n+  const [actionsFor, setActionsFor] = useState(null);\r\n+  const [selected, setSelected] = useState(null);\r\n \r\n-  // Update local state when props change\r\n-  React.useEffect(() => {\r\n-    setLocalIncidentReports(incidentReports || []);\r\n+  useEffect(() => {\r\n+    setIncidents(incidentReports);\r\n   }, [incidentReports]);\r\n \r\n-  // Get unique statuses from data for filter buttons\r\n-  const availableStatuses = useMemo(() => {\r\n-    const statuses = new Set(localIncidentReports?.map(report => report.incident_status));\r\n-    return Array.from(statuses).filter(Boolean);\r\n-  }, [localIncidentReports]);\r\n+  const formatStatus = s => {\r\n+    if (s === \"new\") return \"New Incident\";\r\n+    if (s === \"under_review\") return \"Under Review\";\r\n+    if (s === \"resolved\") return \"Resolved\";\r\n+    return s;\r\n+  };\r\n \r\n-  // Filter incidents based on selected status\r\n-  const filteredIncidents = useMemo(() => {\r\n-    if (!localIncidentReports) return [];\r\n-    if (selectedFilter === \"all\") return localIncidentReports;\r\n-    return localIncidentReports.filter(report => report.incident_status === selectedFilter);\r\n-  }, [localIncidentReports, selectedFilter]);\r\n+  // const updateStatus = (id, newStatus) => {\r\n+  //   setIncidents(prev =>\r\n+  //     prev.map(r => (r.id === id ? { ...r, incident_status: newStatus } : r))\r\n+  //   );\r\n+  //   setActionsFor(null);\r\n+  // };\r\n \r\n-  // Get counts for each status\r\n-  const statusCounts = useMemo(() => {\r\n-    const counts = {};\r\n-    localIncidentReports?.forEach(report => {\r\n-      const status = report.incident_status;\r\n-      counts[status] = (counts[status] || 0) + 1;\r\n-    });\r\n-    return counts;\r\n-  }, [localIncidentReports]);\r\n-\r\n-  const handleStatusUpdate = (reportId, newStatus) => {\r\n-    // Update status in frontend only\r\n-    setLocalIncidentReports(prev => \r\n-      prev.map(report => \r\n-        report.id === reportId \r\n-          ? { ...report, incident_status: newStatus }\r\n-          : report\r\n-      )\r\n-    );\r\n-    setShowActionsFor(null);\r\n-  };\r\n-\r\n   return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Reported Incidents</h2>\r\n-        <div className=\"relative\">\r\n-          <select className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n-            <option>Today</option>\r\n-            <option>This Week</option>\r\n-            <option>This Month</option>\r\n-            <option>This Year</option>\r\n-          </select>\r\n-        </div>\r\n+    <div className=\"relative max-w-6xl mx-auto bg-white rounded-xl shadow-sm\">\r\n+      {/* Header */}\r\n+      <div className=\"flex justify-between items-center p-6 pb-4\">\r\n+        <h2 className=\"text-xl font-semibold\">Reported Incidents</h2>\r\n+        <select className=\"h-10 px-3 rounded-md border text-sm\">\r\n+          {[\"This Week\", \"Today\", \"This Month\", \"This Year\"].map(opt => (\r\n+            <option key={opt}>{opt}</option>\r\n+          ))}\r\n+        </select>\r\n       </div>\r\n \r\n       {/* Status Filter Buttons */}\r\n       <div className=\"flex flex-wrap gap-2 mb-6\">\r\n-        {/* <button\r\n+        <button\r\n           onClick={() => setSelectedFilter(\"all\")}\r\n           className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n             selectedFilter === \"all\"\r\n               ? \"bg-blue-100 text-blue-700 border border-blue-200\"\r\n               : \"bg-gray-50 text-gray-600 hover:bg-gray-100 border border-gray-200\"\r\n           }`}\r\n         >\r\n           All ({localIncidentReports?.length || 0})\r\n-        </button> */}\r\n+        </button>\r\n         \r\n         {availableStatuses.map(status => (\r\n           <button\r\n             key={status}\r\n@@ -132,70 +104,146 @@\n                 <TableCell className=\"capitalize\">{report.incident_type?.replace(/_/g, ' ')}</TableCell>\r\n                 <TableCell>{report.incident_description}</TableCell>\r\n                 <TableCell>\r\n                   <span\r\n-                    className={`text-xs font-medium px-3 py-1 rounded-full capitalize ${\r\n-                      statusStyles[report.incident_status] || \"bg-gray-100 text-gray-700\"\r\n+                    className={`text-xs px-3 py-1 rounded-full ${\r\n+                      statusStyles[r.incident_status] || \"\"\r\n                     }`}\r\n                   >\r\n-                    {report.incident_status?.replace(/_/g, ' ')}\r\n+                    {formatStatus(r.incident_status)}\r\n                   </span>\r\n                 </TableCell>\r\n-                <TableCell className=\"relative\">\r\n+                <TableCell className=\"relative overflow-visible\">\r\n                   <button\r\n-                    onClick={() => setShowActionsFor(showActionsFor === report.id ? null : report.id)}\r\n-                    className=\"p-1 hover:bg-gray-100 rounded transition-colors\"\r\n+                    onClick={() =>\r\n+                      setActionsFor(actionsFor === r.id ? null : r.id)\r\n+                    }\r\n+                    className=\"p-2 rounded hover:bg-gray-100 overflow-visible\"\r\n                   >\r\n-                    <MoreHorizontal className=\"cursor-pointer text-muted-foreground\" />\r\n+                    <MoreHorizontal />\r\n                   </button>\r\n-                  \r\n-                  {/* Action Dropdown */}\r\n-                  {showActionsFor === report.id && (\r\n-                    <div className=\"absolute right-0 top-8 bg-white border border-gray-200 rounded-lg shadow-lg z-10 min-w-[160px]\">\r\n-                      <div className=\"py-1\">\r\n-                        {/* Mark as New - only show if not already new */}\r\n-                        {report.incident_status !== \"new\" && (\r\n+\r\n+                  {actionsFor === r.id && (\r\n+                    <div className=\"absolute right-0 top-10 bg-white border rounded-lg shadow-lg z-20 w-48 overflow-visible sticky-bottom-0\">\r\n+                      <button\r\n+                        onClick={() => {\r\n+                          setSelected(r);\r\n+                          setActionsFor(null);\r\n+                        }}\r\n+                        className=\"flex items-center w-full px-4 py-2 hover:bg-gray-50\"\r\n+                      >\r\n+                        <Eye className=\"mr-2\" /> View Details\r\n+                      </button>\r\n+                      {/* <div className=\"border-t my-1\" /> */}\r\n+                      {/* {[\"new\", \"under_review\", \"resolved\"].map(st =>\r\n+                        r.incident_status !== st ? (\r\n                           <button\r\n-                            onClick={() => handleStatusUpdate(report.id, \"new\")}\r\n-                            className=\"flex items-center gap-2 px-4 py-2 text-sm text-red-700 hover:bg-red-50 w-full text-left\"\r\n+                            key={st}\r\n+                            onClick={() => updateStatus(r.id, st)}\r\n+                            className={`flex w-full px-4 py-2 text-sm ${\r\n+                              st === \"new\"\r\n+                                ? \"text-red-700 hover:bg-red-50\"\r\n+                                : st === \"under_review\"\r\n+                                ? \"text-yellow-700 hover:bg-yellow-50\"\r\n+                                : \"text-green-700 hover:bg-green-50\"\r\n+                            }`}\r\n                           >\r\n-                            Mark as New\r\n+                            Mark as {formatStatus(st)}\r\n                           </button>\r\n-                        )}\r\n-                        \r\n-                        {/* Mark as Resolved - only show if not already resolved */}\r\n-                        {report.incident_status !== \"resolved\" && (\r\n-                          <button\r\n\\ No newline at end of file\n-                            onClick={() => handleStatusUpdate(report.id, \"resolved\")}\r\n-                            className=\"flex items-center gap-2 px-4 py-2 text-sm text-green-700 hover:bg-green-50 w-full text-left\"\r\n-                          >\r\n-                            Mark as Resolved\r\n-                          </button>\r\n-                        )}\r\n-                      </div>\r\n+                        ) : null\r\n+                      )} */}\r\n                     </div>\r\n                   )}\r\n                 </TableCell>\r\n               </TableRow>\r\n-            ))\r\n-          ) : (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-6\">\r\n-                {selectedFilter === \"all\" \r\n-                  ? \"No incident reports found.\" \r\n-                  : `No ${selectedFilter.replace(/_/g, ' ')} incidents found.`}\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n+            ))}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </div>\r\n \r\n-      {/* Click outside to close dropdown */}\r\n-      {showActionsFor && (\r\n-        <div \r\n-          className=\"fixed inset-0 z-5\" \r\n-          onClick={() => setShowActionsFor(null)}\r\n-        />\r\n-      )}\r\n+{selected && (\r\n+  <div className=\"absolute inset-0 bg-gray-100 rounded-lg   border-hidden  \">\r\n+    {/* Header */}\r\n+    <div className=\"flex justify-between items-center bg-white shadow rounded px-4 py-2 mb-4\">\r\n+      <div className=\"flex items-center gap-2\">\r\n+        <div className=\"w-2 place-self-start h-10 bg-green-500 rounded\" />\r\n+        <h2 className=\"text-xl font-semibold capitalize\">\r\n+          {selected.incident_type.replace(/_/g, \" \")}\r\n+        </h2>\r\n+      </div>\r\n+      <div className=\"flex items-center gap-2\">\r\n+\r\n+      </div>\r\n+      <div className=\"flex items-center gap-4\">\r\n+        <span\r\n+          className={`text-xs px-3 py-1 rounded-full ${\r\n+            statusStyles[selected.incident_status]\r\n+          }`}\r\n+        >\r\n+          {formatStatus(selected.incident_status)}\r\n+        </span>\r\n+        <button onClick={() => setSelected(null)} className=\"p-1 rounded hover:bg-gray-100\">\r\n+          <X />\r\n+        </button>\r\n+      </div>\r\n     </div>\r\n+\r\n+    \r\n+    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n+      \r\n+      <div className=\"lg:col-span-1  bg-white shadow rounded p-4\">\r\n+        <div className=\"flex items-center gap-2 mb-2\">\r\n+          <FileText className=\"text-gray-500\" />\r\n+          <h3 className=\"text-lg font-medium\">Incident Description</h3>\r\n+        </div>\r\n+        <div className=\"bg-gray-50 rounded p-4\">\r\n+          <p className=\"text-gray-700\">{selected.incident_description}</p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"grid grid-cols-2 bg-white shadow rounded p-4 space-y-6 flex \">\r\n+        \r\n+        <div >\r\n+          <div className=\"flex items-center gap-2 mb-2\">\r\n+            <User className=\"text-gray-500\" />\r\n+            <h3 className=\"text-lg font-medium\">Reporter Information</h3>\r\n+          </div>\r\n+          <div className=\"bg-gray-50 rounded p-4 space-y-2\">\r\n+            <div>\r\n+              <span className=\"text-sm text-gray-500\">Name:</span>\r\n+              <p className=\"font-medium\">{selected.reporter_name}</p>\r\n+            </div>\r\n+            <div>\r\n+              <span className=\"text-sm text-gray-500\">Role:</span>\r\n+              <p className=\"font-medium capitalize\">{selected.reporter_role}</p>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div>\r\n+          <h3 className=\"text-lg font-medium mb-2\">Photo</h3>\r\n+          <div className=\"bg-gray-100 rounded overflow-hidden aspect-square flex items-center justify-center\">\r\n+            {selected.photo_url ? (\r\n+              <img\r\n+                src={selected.photo_url}\r\n+                alt=\"Incident\"\r\n+                className=\"object-cover \"\r\n+              />\r\n+            ) : (\r\n+              <div className=\"text-gray-400 text-center p-4\">\r\n+                {/* placeholder icon */}\r\n+                <svg className=\"w-16 h-16 mx-auto mb-2\" fill=\"currentColor\" /*...*/ />\r\n+                <p className=\"text-sm\">No photo available</p>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  </div>\r\n+\r\n+)}\r\n+</div>\r\n   );\r\n-}\n+}\r\n"
                },
                {
                    "date": 1753424589953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,64 @@\n                 <TableCell>{r.incident_type.replace(/_/g, \" \")}</TableCell>\r\n                 <TableCell>\r\n                   {r.incident_description.slice(0, 50)}...\r\n                 </TableCell>\r\n+      {/* Status Filter Buttons */}\r\n+      <div className=\"flex flex-wrap gap-2 mb-6\">\r\n+        {/* <button\r\n+          onClick={() => setSelectedFilter(\"all\")}\r\n+          className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n+            selectedFilter === \"all\"\r\n+              ? \"bg-blue-100 text-blue-700 border border-blue-200\"\r\n+              : \"bg-gray-50 text-gray-600 hover:bg-gray-100 border border-gray-200\"\r\n+          }`}\r\n+        >\r\n+          All ({localIncidentReports?.length || 0})\r\n+        </button> */}\r\n+        \r\n+        {availableStatuses.map(status => (\r\n+          <button\r\n+            key={status}\r\n+            onClick={() => setSelectedFilter(status)}\r\n+            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n+              selectedFilter === status\r\n+                ? statusStyles[status] + \" border border-current\"\r\n+                : \"bg-gray-50 text-gray-600 hover:bg-gray-100 border border-gray-200\"\r\n+            }`}\r\n+          >\r\n+            {status?.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())} ({statusCounts[status] || 0})\r\n+          </button>\r\n+        ))}\r\n+      </div>\r\n+      \r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of incident reports.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Reporter Name</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Reporter Role</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Incident Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Short Description</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {filteredIncidents?.length > 0 ? (\r\n+            filteredIncidents.map((report) => (\r\n+              <TableRow\r\n+                key={report.id}\r\n+                className={\r\n+                  (report.reporter_name === \"George Weru\" && report.incident_status === \"new\") ||\r\n+                  (report.reporter_name === \"Lewis Oduor\" && report.incident_status === \"resolved\")\r\n+                    ? \"bg-[#f2f7f3]\"\r\n+                    : \"\"\r\n+                }\r\n+              >\r\n+                <TableCell className=\"font-medium\">{report.reporter_name}</TableCell>\r\n+                <TableCell className=\"capitalize\">{report.reporter_role}</TableCell>\r\n+                <TableCell className=\"capitalize\">{report.incident_type?.replace(/_/g, ' ')}</TableCell>\r\n+                <TableCell>{report.incident_description}</TableCell>\r\n                 <TableCell>\r\n                   <span\r\n                     className={`text-xs px-3 py-1 rounded-full ${\r\n                       statusStyles[r.incident_status] || \"\"\r\n"
                },
                {
                    "date": 1753424596871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,249 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table, TableBody, TableCaption,\r\n+  TableCell, TableHead, TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal, Eye, User, FileText, X } from \"lucide-react\";\r\n+\r\n+const statusStyles = {\r\n+  new: \"bg-red-100 text-red-700\",\r\n+  under_review: \"bg-yellow-100 text-yellow-700\",\r\n+  resolved: \"bg-green-100 text-green-700\",\r\n+};\r\n+\r\n+export default function IncidentTable({ incidentReports = [] }) {\r\n+  const [incidents, setIncidents] = useState(incidentReports);\r\n+  const [actionsFor, setActionsFor] = useState(null);\r\n+  const [selected, setSelected] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    setIncidents(incidentReports);\r\n+  }, [incidentReports]);\r\n+\r\n+  const formatStatus = s => {\r\n+    if (s === \"new\") return \"New Incident\";\r\n+    if (s === \"under_review\") return \"Under Review\";\r\n+    if (s === \"resolved\") return \"Resolved\";\r\n+    return s;\r\n+  };\r\n+\r\n+  // const updateStatus = (id, newStatus) => {\r\n+  //   setIncidents(prev =>\r\n+  //     prev.map(r => (r.id === id ? { ...r, incident_status: newStatus } : r))\r\n+  //   );\r\n+  //   setActionsFor(null);\r\n+  // };\r\n+\r\n+  return (\r\n+    <div className=\"relative max-w-6xl mx-auto bg-white rounded-xl shadow-sm\">\r\n+      {/* Header */}\r\n+      <div className=\"flex justify-between items-center p-6 pb-4\">\r\n+        <h2 className=\"text-xl font-semibold\">Reported Incidents</h2>\r\n+        <select className=\"h-10 px-3 rounded-md border text-sm\">\r\n+          {[\"This Week\", \"Today\", \"This Month\", \"This Year\"].map(opt => (\r\n+            <option key={opt}>{opt}</option>\r\n+          ))}\r\n+        </select>\r\n+      </div>\r\n+\r\n+      {/* Status Filter Buttons */}\r\n+      <div className=\"flex flex-wrap gap-2 mb-6\">\r\n+        {/* <button\r\n+          onClick={() => setSelectedFilter(\"all\")}\r\n+          className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n+            selectedFilter === \"all\"\r\n+              ? \"bg-blue-100 text-blue-700 border border-blue-200\"\r\n+              : \"bg-gray-50 text-gray-600 hover:bg-gray-100 border border-gray-200\"\r\n+          }`}\r\n+        >\r\n+          All ({localIncidentReports?.length || 0})\r\n+        </button> */}\r\n+        \r\n+        {availableStatuses.map(status => (\r\n+          <button\r\n+            key={status}\r\n+            onClick={() => setSelectedFilter(status)}\r\n+            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n+              selectedFilter === status\r\n+                ? statusStyles[status] + \" border border-current\"\r\n+                : \"bg-gray-50 text-gray-600 hover:bg-gray-100 border border-gray-200\"\r\n+            }`}\r\n+          >\r\n+            {status?.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())} ({statusCounts[status] || 0})\r\n+          </button>\r\n+        ))}\r\n+      </div>\r\n+      \r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of incident reports.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Reporter Name</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Reporter Role</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Incident Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Short Description</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {filteredIncidents?.length > 0 ? (\r\n+            filteredIncidents.map((report) => (\r\n+              <TableRow\r\n+                key={report.id}\r\n+                className={\r\n+                  (report.reporter_name === \"George Weru\" && report.incident_status === \"new\") ||\r\n+                  (report.reporter_name === \"Lewis Oduor\" && report.incident_status === \"resolved\")\r\n+                    ? \"bg-[#f2f7f3]\"\r\n+                    : \"\"\r\n+                }\r\n+              >\r\n+                <TableCell className=\"font-medium\">{report.reporter_name}</TableCell>\r\n+                <TableCell className=\"capitalize\">{report.reporter_role}</TableCell>\r\n+                <TableCell className=\"capitalize\">{report.incident_type?.replace(/_/g, ' ')}</TableCell>\r\n+                <TableCell>{report.incident_description}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`text-xs px-3 py-1 rounded-full ${\r\n+                      statusStyles[r.incident_status] || \"\"\r\n+                    }`}\r\n+                  >\r\n+                    {formatStatus(r.incident_status)}\r\n+                  </span>\r\n+                </TableCell>\r\n+                <TableCell className=\"relative overflow-visible\">\r\n+                  <button\r\n+                    onClick={() =>\r\n+                      setActionsFor(actionsFor === r.id ? null : r.id)\r\n+                    }\r\n+                    className=\"p-2 rounded hover:bg-gray-100 overflow-visible\"\r\n+                  >\r\n+                    <MoreHorizontal />\r\n+                  </button>\r\n+\r\n+                  {actionsFor === r.id && (\r\n+                    <div className=\"absolute right-0 top-10 bg-white border rounded-lg shadow-lg z-20 w-48 overflow-visible sticky-bottom-0\">\r\n+                      <button\r\n+                        onClick={() => {\r\n+                          setSelected(r);\r\n+                          setActionsFor(null);\r\n+                        }}\r\n+                        className=\"flex items-center w-full px-4 py-2 hover:bg-gray-50\"\r\n+                      >\r\n+                        <Eye className=\"mr-2\" /> View Details\r\n+                      </button>\r\n+                      {/* <div className=\"border-t my-1\" /> */}\r\n+                      {/* {[\"new\", \"under_review\", \"resolved\"].map(st =>\r\n+                        r.incident_status !== st ? (\r\n+                          <button\r\n+                            key={st}\r\n+                            onClick={() => updateStatus(r.id, st)}\r\n+                            className={`flex w-full px-4 py-2 text-sm ${\r\n+                              st === \"new\"\r\n+                                ? \"text-red-700 hover:bg-red-50\"\r\n+                                : st === \"under_review\"\r\n+                                ? \"text-yellow-700 hover:bg-yellow-50\"\r\n+                                : \"text-green-700 hover:bg-green-50\"\r\n+                            }`}\r\n+                          >\r\n+                            Mark as {formatStatus(st)}\r\n+                          </button>\r\n+                        ) : null\r\n+                      )} */}\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+              </TableRow>\r\n+            ))}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </div>\r\n+\r\n+{selected && (\r\n+  <div className=\"absolute inset-0 bg-gray-100 rounded-lg   border-hidden  \">\r\n+    {/* Header */}\r\n+    <div className=\"flex justify-between items-center bg-white shadow rounded px-4 py-2 mb-4\">\r\n+      <div className=\"flex items-center gap-2\">\r\n+        <div className=\"w-2 place-self-start h-10 bg-green-500 rounded\" />\r\n+        <h2 className=\"text-xl font-semibold capitalize\">\r\n+          {selected.incident_type.replace(/_/g, \" \")}\r\n+        </h2>\r\n+      </div>\r\n+      <div className=\"flex items-center gap-2\">\r\n+\r\n+      </div>\r\n+      <div className=\"flex items-center gap-4\">\r\n+        <span\r\n+          className={`text-xs px-3 py-1 rounded-full ${\r\n+            statusStyles[selected.incident_status]\r\n+          }`}\r\n+        >\r\n+          {formatStatus(selected.incident_status)}\r\n+        </span>\r\n+        <button onClick={() => setSelected(null)} className=\"p-1 rounded hover:bg-gray-100\">\r\n+          <X />\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+\r\n+    \r\n+    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n+      \r\n+      <div className=\"lg:col-span-1  bg-white shadow rounded p-4\">\r\n+        <div className=\"flex items-center gap-2 mb-2\">\r\n+          <FileText className=\"text-gray-500\" />\r\n+          <h3 className=\"text-lg font-medium\">Incident Description</h3>\r\n+        </div>\r\n+        <div className=\"bg-gray-50 rounded p-4\">\r\n+          <p className=\"text-gray-700\">{selected.incident_description}</p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      \r\n+      <div className=\"grid grid-cols-2 bg-white shadow rounded p-4 space-y-6 flex \">\r\n+        \r\n+        <div >\r\n+          <div className=\"flex items-center gap-2 mb-2\">\r\n+            <User className=\"text-gray-500\" />\r\n+            <h3 className=\"text-lg font-medium\">Reporter Information</h3>\r\n+          </div>\r\n+          <div className=\"bg-gray-50 rounded p-4 space-y-2\">\r\n+            <div>\r\n+              <span className=\"text-sm text-gray-500\">Name:</span>\r\n+              <p className=\"font-medium\">{selected.reporter_name}</p>\r\n+            </div>\r\n+            <div>\r\n+              <span className=\"text-sm text-gray-500\">Role:</span>\r\n+              <p className=\"font-medium capitalize\">{selected.reporter_role}</p>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        \r\n+        <div>\r\n+          <h3 className=\"text-lg font-medium mb-2\">Photo</h3>\r\n+          <div className=\"bg-gray-100 rounded overflow-hidden aspect-square flex items-center justify-center\">\r\n+            {selected.photo_url ? (\r\n+              <img\r\n+                src={selected.photo_url}\r\n+                alt=\"Incident\"\r\n+                className=\"object-cover \"\r\n+              />\r\n+            ) : (\r\n+              <div className=\"text-gray-400 text-center p-4\">\r\n+                {/* placeholder icon */}\r\n+                <svg className=\"w-16 h-16 mx-auto mb-2\" fill=\"currentColor\" /*...*/ />\r\n+                <p className=\"text-sm\">No photo available</p>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  </div>\r\n+\r\n+)}\r\n+</div>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1753077303366,
            "name": "Commit-0",
            "content": "import React, { useState, useMemo } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { MoreHorizontal } from \"lucide-react\";\r\n\r\nconst statusStyles = {\r\n  new: \"bg-red-100 text-red-700\",\r\n  \"under_review\": \"bg-yellow-100 text-yellow-700\", \r\n  resolved: \"bg-green-100 text-green-700\",\r\n};\r\n\r\nexport default function IncidentTable({ incidentReports }) {\r\n  const [selectedFilter, setSelectedFilter] = useState(\"all\");\r\n  const [showActionsFor, setShowActionsFor] = useState(null);\r\n  const [localIncidentReports, setLocalIncidentReports] = useState(incidentReports || []);\r\n\r\n  // Update local state when props change\r\n  React.useEffect(() => {\r\n    setLocalIncidentReports(incidentReports || []);\r\n  }, [incidentReports]);\r\n\r\n  // Get unique statuses from data for filter buttons\r\n  const availableStatuses = useMemo(() => {\r\n    const statuses = new Set(localIncidentReports?.map(report => report.incident_status));\r\n    return Array.from(statuses).filter(Boolean);\r\n  }, [localIncidentReports]);\r\n\r\n  // Filter incidents based on selected status\r\n  const filteredIncidents = useMemo(() => {\r\n    if (!localIncidentReports) return [];\r\n    if (selectedFilter === \"all\") return localIncidentReports;\r\n    return localIncidentReports.filter(report => report.incident_status === selectedFilter);\r\n  }, [localIncidentReports, selectedFilter]);\r\n\r\n  // Get counts for each status\r\n  const statusCounts = useMemo(() => {\r\n    const counts = {};\r\n    localIncidentReports?.forEach(report => {\r\n      const status = report.incident_status;\r\n      counts[status] = (counts[status] || 0) + 1;\r\n    });\r\n    return counts;\r\n  }, [localIncidentReports]);\r\n\r\n  const handleStatusUpdate = (reportId, newStatus) => {\r\n    // Update status in frontend only\r\n    setLocalIncidentReports(prev => \r\n      prev.map(report => \r\n        report.id === reportId \r\n          ? { ...report, incident_status: newStatus }\r\n          : report\r\n      )\r\n    );\r\n    setShowActionsFor(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className=\"text-2xl font-semibold\">Reported Incidents</h2>\r\n        <div className=\"relative\">\r\n          <select className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n            <option>Today</option>\r\n            <option>This Week</option>\r\n            <option>This Month</option>\r\n            <option>This Year</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Filter Buttons */}\r\n      <div className=\"flex flex-wrap gap-2 mb-6\">\r\n        {/* <button\r\n          onClick={() => setSelectedFilter(\"all\")}\r\n          className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n            selectedFilter === \"all\"\r\n              ? \"bg-blue-100 text-blue-700 border border-blue-200\"\r\n              : \"bg-gray-50 text-gray-600 hover:bg-gray-100 border border-gray-200\"\r\n          }`}\r\n        >\r\n          All ({localIncidentReports?.length || 0})\r\n        </button> */}\r\n        \r\n        {availableStatuses.map(status => (\r\n          <button\r\n            key={status}\r\n            onClick={() => setSelectedFilter(status)}\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n              selectedFilter === status\r\n                ? statusStyles[status] + \" border border-current\"\r\n                : \"bg-gray-50 text-gray-600 hover:bg-gray-100 border border-gray-200\"\r\n            }`}\r\n          >\r\n            {status?.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())} ({statusCounts[status] || 0})\r\n          </button>\r\n        ))}\r\n      </div>\r\n      \r\n      <Table>\r\n        <TableCaption className=\"sr-only\">A list of incident reports.</TableCaption>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Reporter Name</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Reporter Role</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Incident Type</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Short Description</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {filteredIncidents?.length > 0 ? (\r\n            filteredIncidents.map((report) => (\r\n              <TableRow\r\n                key={report.id}\r\n                className={\r\n                  (report.reporter_name === \"George Weru\" && report.incident_status === \"new\") ||\r\n                  (report.reporter_name === \"Lewis Oduor\" && report.incident_status === \"resolved\")\r\n                    ? \"bg-[#f2f7f3]\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <TableCell className=\"font-medium\">{report.reporter_name}</TableCell>\r\n                <TableCell className=\"capitalize\">{report.reporter_role}</TableCell>\r\n                <TableCell className=\"capitalize\">{report.incident_type?.replace(/_/g, ' ')}</TableCell>\r\n                <TableCell>{report.incident_description}</TableCell>\r\n                <TableCell>\r\n                  <span\r\n                    className={`text-xs font-medium px-3 py-1 rounded-full capitalize ${\r\n                      statusStyles[report.incident_status] || \"bg-gray-100 text-gray-700\"\r\n                    }`}\r\n                  >\r\n                    {report.incident_status?.replace(/_/g, ' ')}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell className=\"relative\">\r\n                  <button\r\n                    onClick={() => setShowActionsFor(showActionsFor === report.id ? null : report.id)}\r\n                    className=\"p-1 hover:bg-gray-100 rounded transition-colors\"\r\n                  >\r\n                    <MoreHorizontal className=\"cursor-pointer text-muted-foreground\" />\r\n                  </button>\r\n                  \r\n                  {/* Action Dropdown */}\r\n                  {showActionsFor === report.id && (\r\n                    <div className=\"absolute right-0 top-8 bg-white border border-gray-200 rounded-lg shadow-lg z-10 min-w-[160px]\">\r\n                      <div className=\"py-1\">\r\n                        {/* Mark as New - only show if not already new */}\r\n                        {report.incident_status !== \"new\" && (\r\n                          <button\r\n                            onClick={() => handleStatusUpdate(report.id, \"new\")}\r\n                            className=\"flex items-center gap-2 px-4 py-2 text-sm text-red-700 hover:bg-red-50 w-full text-left\"\r\n                          >\r\n                            Mark as New\r\n                          </button>\r\n                        )}\r\n                        \r\n                        {/* Mark as Resolved - only show if not already resolved */}\r\n                        {report.incident_status !== \"resolved\" && (\r\n                          <button\r\n                            onClick={() => handleStatusUpdate(report.id, \"resolved\")}\r\n                            className=\"flex items-center gap-2 px-4 py-2 text-sm text-green-700 hover:bg-green-50 w-full text-left\"\r\n                          >\r\n                            Mark as Resolved\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={6} className=\"text-center py-6\">\r\n                {selectedFilter === \"all\" \r\n                  ? \"No incident reports found.\" \r\n                  : `No ${selectedFilter.replace(/_/g, ' ')} incidents found.`}\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      {/* Click outside to close dropdown */}\r\n      {showActionsFor && (\r\n        <div \r\n          className=\"fixed inset-0 z-5\" \r\n          onClick={() => setShowActionsFor(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}"
        }
    ]
}