{
    "sourceFile": "src/hooks/useMostVisitedUnits.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1752569144318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752569629961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,23 +4,27 @@\n const useMostVisitedUnits = () => {\r\n   const [units, setUnits] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n-  useEffect(() => {\r\n-    const fetchUnits = async () => {\r\n-      try {\r\n-        const data = await getMostVisitedUnits();\r\n-        setUnits(data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching most visited units:\", error);\r\n-      } finally {\r\n-        setLoading(false);\r\n+ useEffect(() => {\r\n+  const fetchUnits = async () => {\r\n+    try {\r\n+      const data = await getMostVisitedUnits();\r\n+      setUnits(data);\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching most visited units:\", error);\r\n+      if (error.response) {\r\n+        console.error(\"Server responded with:\", error.response.data);\r\n       }\r\n-    };\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n \r\n-    fetchUnits();\r\n-  }, []);\r\n+  fetchUnits();\r\n+}, []);\r\n \r\n+\r\n   return { units, loading };\r\n };\r\n \r\n export default useMostVisitedUnits;\r\n"
                },
                {
                    "date": 1752569887734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     try {\r\n       const data = await getMostVisitedUnits();\r\n       setUnits(data);\r\n     } catch (error) {\r\n-      console.error(\"Error fetching most visited units:\", error);\r\n+   \r\n       if (error.response) {\r\n         console.error(\"Server responded with:\", error.response.data);\r\n       }\r\n     } finally {\r\n"
                },
                {
                    "date": 1752654677787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,33 @@\n import { useEffect, useState } from \"react\";\r\n import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n \r\n-const useMostVisitedUnits = () => {\r\n+const useMostVisitedUnits = (filter = \"today\") => {\r\n   const [units, setUnits] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null); // Optional: track errors\r\n \r\n- useEffect(() => {\r\n-  const fetchUnits = async () => {\r\n-    try {\r\n-      const data = await getMostVisitedUnits();\r\n-      setUnits(data);\r\n-    } catch (error) {\r\n-   \r\n-      if (error.response) {\r\n-        console.error(\"Server responded with:\", error.response.data);\r\n+  useEffect(() => {\r\n+    const fetchUnits = async () => {\r\n+      try {\r\n+        const data = await getMostVisitedUnits(filter); // Support future filtering\r\n+        setUnits(data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching most visited units:\", error);\r\n+        if (error.response) {\r\n+          console.error(\"Server responded with:\", error.response.data);\r\n+          setError(\"Server error occurred. Please try again.\");\r\n+        } else {\r\n+          setError(\"Something went wrong. Please check your connection.\");\r\n+        }\r\n+      } finally {\r\n+        setLoading(false);\r\n       }\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n+    };\r\n \r\n-  fetchUnits();\r\n-}, []);\r\n+    fetchUnits();\r\n+  }, [filter]); // re-run when filter changes\r\n \r\n-\r\n-  return { units, loading };\r\n+  return { units, loading, error };\r\n };\r\n \r\n export default useMostVisitedUnits;\r\n"
                },
                {
                    "date": 1752654750512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n   useEffect(() => {\r\n     const fetchUnits = async () => {\r\n       try {\r\n-        const data = await getMostVisitedUnits(filter); // Support future filtering\r\n+        const data = await getMostVisitedUnits(filter); \r\n         setUnits(data);\r\n       } catch (error) {\r\n         console.error(\"Error fetching most visited units:\", error);\r\n         if (error.response) {\r\n"
                },
                {
                    "date": 1752655481954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,68 @@\n+// useMostVisitedUnits.js\r\n import { useEffect, useState } from \"react\";\r\n import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n \r\n const useMostVisitedUnits = (filter = \"today\") => {\r\n   const [units, setUnits] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(null); // Optional: track errors\r\n+  const [error, setError] = useState(null);\r\n \r\n   useEffect(() => {\r\n     const fetchUnits = async () => {\r\n       try {\r\n-        const data = await getMostVisitedUnits(filter); \r\n-        setUnits(data);\r\n+        setLoading(true);\r\n+        setError(null); // Reset error state\r\n+        \r\n+        const data = await getMostVisitedUnits(filter);\r\n+        setUnits(data || []); // Fallback to empty array if data is null/undefined\r\n+        \r\n       } catch (error) {\r\n         console.error(\"Error fetching most visited units:\", error);\r\n+        \r\n+        let errorMessage = \"Something went wrong. Please try again.\";\r\n+        \r\n         if (error.response) {\r\n+          // Server responded with error status\r\n+          const status = error.response.status;\r\n+          const serverMessage = error.response.data?.message || error.response.data?.error;\r\n+          \r\n+          if (status === 500) {\r\n+            errorMessage = \"Internal server error. Please try again later.\";\r\n+          } else if (status === 404) {\r\n+            errorMessage = \"Endpoint not found. Please check the API configuration.\";\r\n+          } else if (status === 401) {\r\n+            errorMessage = \"Unauthorized. Please check your authentication.\";\r\n+          } else if (serverMessage) {\r\n+            errorMessage = serverMessage;\r\n+          }\r\n+          \r\n           console.error(\"Server responded with:\", error.response.data);\r\n-          setError(\"Server error occurred. Please try again.\");\r\n+        } else if (error.request) {\r\n+          // Request was made but no response received\r\n+          errorMessage = \"No response from server. Please check your connection.\";\r\n         } else {\r\n-          setError(\"Something went wrong. Please check your connection.\");\r\n+          // Something else happened\r\n+          errorMessage = error.message || \"An unexpected error occurred.\";\r\n         }\r\n+        \r\n+        setError(errorMessage);\r\n+        setUnits([]); // Reset units on error\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n     fetchUnits();\r\n-  }, [filter]); // re-run when filter changes\r\n+  }, [filter]);\r\n \r\n-  return { units, loading, error };\r\n+  // Function to retry the API call\r\n+  const retry = () => {\r\n+    setError(null);\r\n+    setLoading(true);\r\n+    // The useEffect will run again due to the dependency array\r\n+  };\r\n+\r\n+  return { units, loading, error, retry };\r\n };\r\n \r\n-export default useMostVisitedUnits;\r\n+export default useMostVisitedUnits;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752655522580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         const data = await getMostVisitedUnits(filter);\r\n         setUnits(data || []); // Fallback to empty array if data is null/undefined\r\n         \r\n       } catch (error) {\r\n-        console.error(\"Error fetching most visited units:\", error);\r\n+       /\r\n         \r\n         let errorMessage = \"Something went wrong. Please try again.\";\r\n         \r\n         if (error.response) {\r\n"
                },
                {
                    "date": 1752655542296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+// useMostVisitedUnits.js\r\n+import { useEffect, useState } from \"react\";\r\n+import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n+\r\n+const useMostVisitedUnits = (filter = \"today\") => {\r\n+  const [units, setUnits] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchUnits = async () => {\r\n+      try {\r\n+        setLoading(true);\r\n+        setError(null); // Reset error state\r\n+        \r\n+        const data = await getMostVisitedUnits(filter);\r\n+        setUnits(data || []); // Fallback to empty array if data is null/undefined\r\n+        \r\n+      } catch (error) {\r\n+       /\r\n+        \r\n+        let errorMessage = \"Something went wrong. Please try again.\";\r\n+        \r\n+        if (error.response) {\r\n+          // Server responded with error status\r\n+          const status = error.response.status;\r\n+          const serverMessage = error.response.data?.message || error.response.data?.error;\r\n+          \r\n+          if (status === 500) {\r\n+            errorMessage = \"Internal server error. Please try again later.\";\r\n+          } else if (status === 404) {\r\n+            errorMessage = \"Endpoint not found. Please check the API configuration.\";\r\n+          } else if (status === 401) {\r\n+            errorMessage = \"Unauthorized. Please check your authentication.\";\r\n+          } else if (serverMessage) {\r\n+            errorMessage = serverMessage;\r\n+          }\r\n+          \r\n+          console.error(\"Server responded with:\", error.response.data);\r\n+        } else if (error.request) {\r\n+          // Request was made but no response received\r\n+          errorMessage = \"No response from server. Please check your connection.\";\r\n+        } else {\r\n+          // Something else happened\r\n+          errorMessage = error.message || \"An unexpected error occurred.\";\r\n+        }\r\n+        \r\n+        setError(errorMessage);\r\n+        setUnits([]); // Reset units on error\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchUnits();\r\n+  }, [filter]);\r\n+\r\n+  // Function to retry the API call\r\n+  const retry = () => {\r\n+    setError(null);\r\n+    setLoading(true);\r\n+    // The useEffect will run again due to the dependency array\r\n+  };\r\n+\r\n+  return { units, loading, error, retry };\r\n+};\r\n+\r\n+export default useMostVisitedUnits;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752655548720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,33 @@\n+import { useEffect, useState } from \"react\";\r\n+import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n+\r\n+const useMostVisitedUnits = (filter = \"today\") => {\r\n+  const [units, setUnits] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null); // Optional: track errors\r\n+\r\n+  useEffect(() => {\r\n+    const fetchUnits = async () => {\r\n+      try {\r\n+        const data = await getMostVisitedUnits(filter); // Support future filtering\r\n+        setUnits(data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching most visited units:\", error);\r\n+        if (error.response) {\r\n+          console.error(\"Server responded with:\", error.response.data);\r\n+          setError(\"Server error occurred. Please try again.\");\r\n+        } else {\r\n+          setError(\"Something went wrong. Please check your connection.\");\r\n+        }\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchUnits();\r\n+  }, [filter]); // re-run when filter changes\r\n+\r\n+  return { units, loading, error };\r\n+};\r\n+\r\n+export default useMostVisitedUnits;\r\n"
                },
                {
                    "date": 1752655555172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,4 @@\n-import { useEffect, useState } from \"react\";\r\n-import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n-\r\n-const useMostVisitedUnits = (filter = \"today\") => {\r\n-  const [units, setUnits] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(null); // Optional: track errors\r\n-\r\n-  useEffect(() => {\r\n-    const fetchUnits = async () => {\r\n-      try {\r\n-        const data = await getMostVisitedUnits(filter); // Support future filtering\r\n-        setUnits(data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching most visited units:\", error);\r\n-        if (error.response) {\r\n-          console.error(\"Server responded with:\", error.response.data);\r\n-          setError(\"Server error occurred. Please try again.\");\r\n-        } else {\r\n-          setError(\"Something went wrong. Please check your connection.\");\r\n-        }\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchUnits();\r\n-  }, [filter]); // re-run when filter changes\r\n-\r\n-  return { units, loading, error };\r\n-};\r\n-\r\n-export default useMostVisitedUnits;\r\n // useMostVisitedUnits.js\r\n import { useEffect, useState } from \"react\";\r\n import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n \r\n@@ -49,9 +16,9 @@\n         const data = await getMostVisitedUnits(filter);\r\n         setUnits(data || []); // Fallback to empty array if data is null/undefined\r\n         \r\n       } catch (error) {\r\n-       /\r\n+        console.error(\"Error fetching most visited units:\", error);\r\n         \r\n         let errorMessage = \"Something went wrong. Please try again.\";\r\n         \r\n         if (error.response) {\r\n@@ -97,73 +64,5 @@\n \r\n   return { units, loading, error, retry };\r\n };\r\n \r\n-export default useMostVisitedUnits;\n-// useMostVisitedUnits.js\r\n-import { useEffect, useState } from \"react\";\r\n-import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n-\r\n-const useMostVisitedUnits = (filter = \"today\") => {\r\n-  const [units, setUnits] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchUnits = async () => {\r\n-      try {\r\n-        setLoading(true);\r\n-        setError(null); // Reset error state\r\n-        \r\n-        const data = await getMostVisitedUnits(filter);\r\n-        setUnits(data || []); // Fallback to empty array if data is null/undefined\r\n-        \r\n-      } catch (error) {\r\n-       /\r\n-        \r\n-        let errorMessage = \"Something went wrong. Please try again.\";\r\n-        \r\n-        if (error.response) {\r\n-          // Server responded with error status\r\n-          const status = error.response.status;\r\n-          const serverMessage = error.response.data?.message || error.response.data?.error;\r\n-          \r\n-          if (status === 500) {\r\n-            errorMessage = \"Internal server error. Please try again later.\";\r\n-          } else if (status === 404) {\r\n-            errorMessage = \"Endpoint not found. Please check the API configuration.\";\r\n-          } else if (status === 401) {\r\n-            errorMessage = \"Unauthorized. Please check your authentication.\";\r\n-          } else if (serverMessage) {\r\n-            errorMessage = serverMessage;\r\n-          }\r\n-          \r\n-          console.error(\"Server responded with:\", error.response.data);\r\n-        } else if (error.request) {\r\n-          // Request was made but no response received\r\n-          errorMessage = \"No response from server. Please check your connection.\";\r\n-        } else {\r\n-          // Something else happened\r\n-          errorMessage = error.message || \"An unexpected error occurred.\";\r\n-        }\r\n-        \r\n-        setError(errorMessage);\r\n-        setUnits([]); // Reset units on error\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchUnits();\r\n-  }, [filter]);\r\n-\r\n-  // Function to retry the API call\r\n-  const retry = () => {\r\n-    setError(null);\r\n-    setLoading(true);\r\n-    // The useEffect will run again due to the dependency array\r\n-  };\r\n-\r\n-  return { units, loading, error, retry };\r\n-};\r\n-\r\n export default useMostVisitedUnits;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752656718564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { useEffect, useState } from \"react\";\r\n+import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n+\r\n+const useMostVisitedUnits = (filter = \"today\") => {\r\n+  const [units, setUnits] = useState([]); // Initialize with empty array\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchUnits = async () => {\r\n+      try {\r\n+        const data = await getMostVisitedUnits(filter);\r\n+        // Add safety check for the response\r\n+        setUnits(Array.isArray(data) ? data : []);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching most visited units:\", error);\r\n+        setUnits([]); // Set to empty array on error\r\n+        setError(\"Failed to load units\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+    fetchUnits();\r\n+  }, [filter]);\r\n+\r\n+  return { units, loading, error };\r\n+};\r\n+export default useMostVisitedUnits;\r\n"
                },
                {
                    "date": 1752664106624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useEffect, useState } from \"react\";\r\n import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n \r\n const useMostVisitedUnits = (filter = \"today\") => {\r\n-  const [units, setUnits] = useState([]); // Initialize with empty array\r\n+  const [units, setUnits] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n \r\n   useEffect(() => {\r\n@@ -25,72 +25,4 @@\n \r\n   return { units, loading, error };\r\n };\r\n export default useMostVisitedUnits;\r\n-// useMostVisitedUnits.js\r\n-import { useEffect, useState } from \"react\";\r\n-import { getMostVisitedUnits } from \"../services/visitorservice\";\r\n-\r\n-const useMostVisitedUnits = (filter = \"today\") => {\r\n-  const [units, setUnits] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchUnits = async () => {\r\n-      try {\r\n-        setLoading(true);\r\n-        setError(null); // Reset error state\r\n-        \r\n-        const data = await getMostVisitedUnits(filter);\r\n-        setUnits(data || []); // Fallback to empty array if data is null/undefined\r\n-        \r\n-      } catch (error) {\r\n-        console.error(\"Error fetching most visited units:\", error);\r\n-        \r\n-        let errorMessage = \"Something went wrong. Please try again.\";\r\n-        \r\n-        if (error.response) {\r\n-          // Server responded with error status\r\n-          const status = error.response.status;\r\n-          const serverMessage = error.response.data?.message || error.response.data?.error;\r\n-          \r\n-          if (status === 500) {\r\n-            errorMessage = \"Internal server error. Please try again later.\";\r\n-          } else if (status === 404) {\r\n-            errorMessage = \"Endpoint not found. Please check the API configuration.\";\r\n-          } else if (status === 401) {\r\n-            errorMessage = \"Unauthorized. Please check your authentication.\";\r\n-          } else if (serverMessage) {\r\n-            errorMessage = serverMessage;\r\n-          }\r\n-          \r\n-          console.error(\"Server responded with:\", error.response.data);\r\n-        } else if (error.request) {\r\n-          // Request was made but no response received\r\n-          errorMessage = \"No response from server. Please check your connection.\";\r\n-        } else {\r\n-          // Something else happened\r\n-          errorMessage = error.message || \"An unexpected error occurred.\";\r\n-        }\r\n-        \r\n-        setError(errorMessage);\r\n-        setUnits([]); // Reset units on error\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchUnits();\r\n-  }, [filter]);\r\n-\r\n-  // Function to retry the API call\r\n-  const retry = () => {\r\n-    setError(null);\r\n-    setLoading(true);\r\n-    // The useEffect will run again due to the dependency array\r\n-  };\r\n-\r\n-  return { units, loading, error, retry };\r\n-};\r\n-\r\n-export default useMostVisitedUnits;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1752569144318,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from \"react\";\r\nimport { getMostVisitedUnits } from \"../services/visitorservice\";\r\n\r\nconst useMostVisitedUnits = () => {\r\n  const [units, setUnits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchUnits = async () => {\r\n      try {\r\n        const data = await getMostVisitedUnits();\r\n        setUnits(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching most visited units:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUnits();\r\n  }, []);\r\n\r\n  return { units, loading };\r\n};\r\n\r\nexport default useMostVisitedUnits;\r\n"
        }
    ]
}